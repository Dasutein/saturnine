# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: cmd/cmd_ability.proto, cmd/cmd_activity.proto, cmd/cmd_avatar.proto, cmd/cmd_dungeon.proto, cmd/cmd_fight.proto, cmd/cmd_gacha.proto, cmd/cmd_gadget.proto, cmd/cmd_investigation.proto, cmd/cmd_item.proto, cmd/cmd_mail.proto, cmd/cmd_misc.proto, cmd/cmd_monster.proto, cmd/cmd_mp.proto, cmd/cmd_npc.proto, cmd/cmd_pathfinding.proto, cmd/cmd_player.proto, cmd/cmd_property.proto, cmd/cmd_quest.proto, cmd/cmd_scene.proto, cmd/cmd_shop.proto, cmd/cmd_skill.proto, cmd/cmd_social.proto, cmd/cmd_tower.proto, cmd/cmd_watcher.proto, define.proto
# plugin: python-betterproto
import builtins
from dataclasses import dataclass
from typing import (
    Dict,
    List,
)

import betterproto


class ENetReason(betterproto.Enum):
    ENET_TIMEOUT = 0
    ENET_CLIENT_CLOSE = 1
    ENET_CLIENT_REBIND_FAIL = 2
    ENET_CLIENT_SHUTDOWN = 3
    ENET_SERVER_RELOGIN = 4
    ENET_SERVER_KICK = 5
    ENET_SERVER_SHUTDOWN = 6
    ENET_NOT_FOUND_SESSION = 7
    ENET_LOGIN_UNFINISHED = 8
    ENET_PACKET_FREQ_TOO_HIGH = 9
    ENET_PING_TIMEOUT = 10
    ENET_TRANFER_FAILED = 11
    ENET_SERVER_KILL_CLIENT = 12
    ENET_CLIENT_CONNECT_KEY = 1234567890
    ENET_CLIENT_EDITOR_CONNECT_KEY = 987654321


class AccountType(betterproto.Enum):
    ACCOUNT_NONE = 0
    ACCOUNT_MIHOYO = 1
    ACCOUNT_XIAOMI = 11
    ACCOUNT_COOLPAD = 12
    ACCOUNT_YYB = 13
    ACCOUNT_BILI = 14
    ACCOUNT_HUAWEI = 15
    ACCOUNT_MEIZU = 16
    ACCOUNT_360 = 17
    ACCOUNT_OPPO = 18
    ACCOUNT_VIVO = 19
    ACCOUNT_UC = 20
    ACCOUNT_WANDOJIA = 21
    ACCOUNT_LENOVO = 22
    ACCOUNT_JINLI = 23


class ServiceType(betterproto.Enum):
    SERVICE_NONE = 0
    SERVICE_CLIENT = 1
    SERVICE_GATE = 2
    SERVICE_GAME = 3
    SERVICE_NODE = 4
    SERVICE_DB = 5
    SERVICE_SNS = 6
    SERVICE_DISPATCH = 7
    SERVICE_MUIP = 8
    SERVICE_OFFLINE_MSG = 9
    SERVICE_MAIL = 10
    SERVICE_MP = 11
    SERVICE_HTTPPROXY = 12
    SERVICE_ACTIVITY = 13
    SERVICE_PATHFINDING = 14
    SERVICE_SOCIAL = 15


class ClientType(betterproto.Enum):
    CLIENT_PRODUCT = 0
    CLIENT_DEV = 1


class RegionType(betterproto.Enum):
    REGION_PRODUCT = 0
    REGION_EXAM = 1
    REGION_DEV_PUB = 2
    REGION_DEV_PRI = 3


class ActionReasonType(betterproto.Enum):
    ACTION_REASON_NONE = 0
    ACTION_REASON_QUEST_ITEM = 1
    ACTION_REASON_QUEST_REWARD = 2
    ACTION_REASON_TRIFLE = 3
    ACTION_REASON_SHOP = 4
    ACTION_REASON_PLAYER_UPGRADE_REWARD = 5
    ACTION_REASON_ADD_AVATAR = 6
    ACTION_REASON_GADGET_ENV_ANIMAL = 7
    ACTION_REASON_MONSTER_ENV_ANIMAL = 8
    ACTION_REASON_COMPOUND = 9
    ACTION_REASON_COOK = 10
    ACTION_REASON_GATHER = 11
    ACTION_REASON_MAIL_ATTACHMENT = 12
    ACTION_REASON_CITY_LEVELUP_RETURN = 15
    ACTION_REASON_CITY_LEVELUP_REWARD = 17
    ACTION_REASON_AREA_EXPLORE_REWARD = 18
    ACTION_REASON_UNLOCK_POINT_REWARD = 19
    ACTION_REASON_DUNGEON_FIRST_PASS = 20
    ACTION_REASON_DUNGEON_PASS = 21
    ACTION_REASON_CHANGE_ELEM_TYPE = 23
    ACTION_REASON_FETTER_OPEN = 25
    ACTION_REASON_DAILY_TASK_SCORE = 26
    ACTION_REASON_DAILY_TASK_HOST = 27
    ACTION_REASON_RAND_TASK_HOST = 28
    ACTION_REASON_EXPEDITION = 29
    ACTION_REASON_GACHA = 30
    ACTION_REASON_COMBINE = 31
    ACTION_REASON_RAND_TASK_GUEST = 32
    ACTION_REASON_DAILY_TASK_GUEST = 33
    ACTION_REASON_FORGE_OUTPUT = 34
    ACTION_REASON_FORGE_RETURN = 35
    ACTION_REASON_INIT_AVATAR = 36
    ACTION_REASON_MONSTER_DIE = 37
    ACTION_REASON_GM = 38
    ACTION_REASON_OPEN_CHEST = 39
    ACTION_REASON_GADGET_DIE = 40
    ACTION_REASON_MONSTER_CHANGE_HP = 41
    ACTION_REASON_SUBFIELD_DROP = 42
    ACTION_REASON_PUSH_TIPS_REWARD = 43
    ACTION_REASON_ACTIVITY_MONSTER_DROP = 44
    ACTION_REASON_ACTIVITY_GATHER = 45
    ACTION_REASON_ACTIVITY_SUBFIELD_DROP = 46
    ACTION_REASON_TOWER_SCHEDULE_REWARD = 47
    ACTION_REASON_TOWER_FLOOR_STAR_REWARD = 48
    ACTION_REASON_TOWER_FIRST_PASS_REWARD = 49
    ACTION_REASON_TOWER_DAILY_REWARD = 50
    ACTION_REASON_HIT_CLIENT_TRIVIAL_ENTITY = 51
    ACTION_REASON_OPEN_WORLD_BOSS_CHEST = 52
    ACTION_REASON_MATERIAL_DELETE_RETURN = 53
    ACTION_REASON_PLAYER_USE_ITEM = 1001
    ACTION_REASON_DROP_ITEM = 1002
    ACTION_REASON_WEAPON_UPGRADE = 1011
    ACTION_REASON_WEAPON_PROMOTE = 1012
    ACTION_REASON_WEAPON_AWAKEN = 1013
    ACTION_REASON_RELIC_UPGRADE = 1014
    ACTION_REASON_ABILITY = 1015
    ACTION_REASON_DUNGEON_STATUE_DROP = 1016
    ACTION_REASON_OFFLINE_MSG = 1017
    ACTION_REASON_AVATAR_UPGRADE = 1018
    ACTION_REASON_AVATAR_PROMOTE = 1019
    ACTION_REASON_QUEST_ACTION = 1021
    ACTION_REASON_CITY_LEVELUP = 1022
    ACTION_REASON_UPGRADE_SKILL = 1024
    ACTION_REASON_UNLOCK_TALENT = 1025
    ACTION_REASON_UPGRADE_PROUD_SKILL = 1026
    ACTION_REASON_PLAYER_LEVEL_LIMIT_UP = 1027
    ACTION_REASON_DUNGEON_DAILY = 1028
    ACTION_REASON_ITEM_GIVING = 1030
    ACTION_REASON_FORGE_COST = 1031
    ACTION_REASON_INVESTIGATION_REWARD = 1032
    ACTION_REASON_INVESTIGATION_TARGET_REWARD = 1033
    ACTION_REASON_GADGET_INTERACT = 1034
    ACTION_REASON_SEA_LAMP_CI_MATERIAL = 1036
    ACTION_REASON_SEA_LAMP_CONTRIBUTION_REWARD = 1037
    ACTION_REASON_SEA_LAMP_PHASE_REWARD = 1038
    ACTION_REASON_SEA_LAMP_FLY_LAMP = 1039
    ACTION_REASON_AUTO_RECOVER = 1040
    ACTION_REASON_ACTIVITY_EXPIRE_ITEM = 1041
    ACTION_REASON_SUB_COIN_NEGATIVE = 1042


class StoreType(betterproto.Enum):
    STORE_NONE = 0
    STORE_PACK = 1
    STORE_DEPOT = 2


class VirtualItem(betterproto.Enum):
    ITEM_VIRTUAL_NONE = 0
    ITEM_VIRTUAL_AVATAR_EXP = 101
    ITEM_VIRTUAL_PLAYER_EXP = 102
    ITEM_VIRTUAL_FETTER_EXP = 105
    ITEM_VIRTUAL_RESIN = 106
    ITEM_VIRTUAL_WORLD_RESIN = 107
    ITEM_VIRTUAL_HCOIN = 201
    ITEM_VIRTUAL_SCOIN = 202


class AbilityScalarType(betterproto.Enum):
    ABILITY_SCALAR_TYPE_UNKNOW = 0
    ABILITY_SCALAR_TYPE_FLOAT = 1
    ABILITY_SCALAR_TYPE_INT = 2
    ABILITY_SCALAR_TYPE_BOOL = 3
    ABILITY_SCALAR_TYPE_TRIGGER = 4
    ABILITY_SCALAR_TYPE_STRING = 5
    ABILITY_SCALAR_TYPE_UINT = 6


class MotionState(betterproto.Enum):
    MOTION_NONE = 0
    MOTION_RESET = 1
    MOTION_STANDBY = 2
    MOTION_STANDBY_MOVE = 3
    MOTION_WALK = 4
    MOTION_RUN = 5
    MOTION_DASH = 6
    MOTION_CLIMB = 7
    MOTION_CLIMB_JUMP = 8
    MOTION_STANDBY_TO_CLIMB = 9
    MOTION_FIGHT = 10
    MOTION_JUMP = 11
    MOTION_DROP = 12
    MOTION_FLY = 13
    MOTION_SWIM_MOVE = 14
    MOTION_SWIM_IDLE = 15
    MOTION_SWIM_DASH = 16
    MOTION_SWIM_JUMP = 17
    MOTION_SLIP = 18
    MOTION_GO_UPSTAIRS = 19
    MOTION_FALL_ON_GROUND = 20
    MOTION_JUMP_UP_WALL_FOR_STANDBY = 21
    MOTION_JUMP_OFF_WALL = 22
    MOTION_POWERED_FLY = 23
    MOTION_LADDER_IDLE = 24
    MOTION_LADDER_MOVE = 25
    MOTION_LADDER_SLIP = 26
    MOTION_STANDBY_TO_LADDER = 27
    MOTION_LADDER_TO_STANDBY = 28
    MOTION_DANGER_STANDBY = 29
    MOTION_DANGER_STANDBY_MOVE = 30
    MOTION_DANGER_WALK = 31
    MOTION_DANGER_RUN = 32
    MOTION_DANGER_DASH = 33
    MOTION_CROUCH_IDLE = 34
    MOTION_CROUCH_MOVE = 35
    MOTION_CROUCH_ROLL = 36
    MOTION_NOTIFY = 37
    MOTION_LAND_SPEED = 38
    MOTION_MOVE_FAIL_ACK = 39
    MOTION_WATERFALL = 40
    MOTION_DASH_BEFORE_SHAKE = 41
    MOTION_SIT_IDLE = 42
    MOTION_NUM = 43


class ProtEntityType(betterproto.Enum):
    PROT_ENTITY_NONE = 0
    PROT_ENTITY_AVATAR = 1
    PROT_ENTITY_MONSTER = 2
    PROT_ENTITY_NPC = 3
    PROT_ENTITY_GADGET = 4
    PROT_ENTITY_REGION = 5
    PROT_ENTITY_WEAPON = 6
    PROT_ENTITY_WEATHER = 7
    PROT_ENTITY_SCENE = 8
    PROT_ENTITY_TEAM = 9
    PROT_ENTITY_MASSIVE_ENTITY = 10
    PROT_ENTITY_MP_LEVEL = 11
    PROT_ENTITY_MAX = 12


class NpcTalkState(betterproto.Enum):
    NPC_TALK_NONE = 0
    NPC_TALK_AUTO = 1
    NPC_TALK_MANUAL = 2


class MonsterBornType(betterproto.Enum):
    MONSTER_BORN_NONE = 0
    MONSTER_BORN_DEFAULT = 1
    MONSTER_BORN_RANDOM = 2


class GadgetBornType(betterproto.Enum):
    GADGET_BORN_NONE = 0
    GADGET_BORN_IN_AIR = 1
    GADGET_BORN_PLAYER = 2
    GADGET_BORN_MONSTER_HIT = 3
    GADGET_BORN_MONSTER_DIE = 4
    GADGET_BORN_GADGET = 5
    GADGET_BORN_GROUND = 6


class ChangHpReason(betterproto.Enum):
    CHANGE_HP_NONE = 0
    CHANGE_HP_SUB_AVATAR = 1
    CHANGE_HP_SUB_MONSTER = 2
    CHANGE_HP_SUB_GEAR = 3
    CHANGE_HP_SUB_ENVIR = 4
    CHANGE_HP_SUB_FALL = 5
    CHANGE_HP_SUB_DRAWN = 6
    CHANGE_HP_SUB_ABYSS = 7
    CHANGE_HP_SUB_ABILITY = 8
    CHANGE_HP_SUB_SUMMON = 9
    CHANGE_HP_SUB_SCRIPT = 10
    CHANGE_HP_SUB_GM = 11
    CHANGE_HP_SUB_KILL_SELF = 12
    CHANGE_HP_BY_LUA = 51
    CHANGE_HP_ADD_ABILITY = 101
    CHANGE_HP_ADD_ITEM = 102
    CHANGE_HP_ADD_REVIVE = 103
    CHANGE_HP_ADD_UPGRADE = 104
    CHANGE_HP_ADD_STATUE = 105
    CHANGE_HP_ADD_BACKGROUND = 106
    CHANGE_HP_ADD_GM = 107


class PlayerDieType(betterproto.Enum):
    PLAYER_DIE_NONE = 0
    PLAYER_DIE_KILL_BY_MONSTER = 1
    PLAYER_DIE_KILL_BY_GEAR = 2
    PLAYER_DIE_FALL = 3
    PLAYER_DIE_DRAWN = 4
    PLAYER_DIE_ABYSS = 5
    PLAYER_DIE_GM = 6


class PlayerDieOption(betterproto.Enum):
    DIE_OPT_NONE = 0
    DIE_OPT_REPLAY = 1
    DIE_OPT_CANCEL = 2
    DIE_OPT_REVIVE = 3


class AvatarExpeditionState(betterproto.Enum):
    AVATAR_EXPEDITION_NONE = 0
    AVATAR_EXPEDITION_DOING = 1
    AVATAR_EXPEDITION_FINISH_WAIT_REWARD = 2
    AVATAR_EXPEDITION_CALLBACK_WAIT_REWARD = 3


class AvatarType(betterproto.Enum):
    AVATAR_TYPE_NONE = 0
    AVATAR_TYPE_FORMAL = 1
    AVATAR_TYPE_TRIAL = 2
    AVATAR_TYPE_MIRROR = 3


class EventTriggerType(betterproto.Enum):
    EVENT_TRIGGER_NONE = 0
    EVENT_TRIGGER_ENTER_FORCE = 1


class MpSettingType(betterproto.Enum):
    MP_SETTING_NO_ENTER = 0
    MP_SETTING_ENTER_FREELY = 1
    MP_SETTING_ENTER_AFTER_APPLY = 2


class MathExpressionType(betterproto.Enum):
    MATH_EXPR_NONE = 0
    MATH_EXPR_LEVEL = 1
    MATH_EXPR_REGISTER_TIME = 2
    MATH_EXPR_LAST_LOGIN_TIME = 3
    MATH_EXPR_TOTAL_LOGIN_DAYS = 4


class LoginRewardConfigType(betterproto.Enum):
    LOGIN_REWARD_IMMEDIDATE = 0
    LOGIN_REWARD_FIRST = 1


class LanguageType(betterproto.Enum):
    LANGUAGE_NONE = 0
    LANGUAGE_EN = 1
    LANGUAGE_SC = 2
    LANGUAGE_TC = 3
    LANGUAGE_FR = 4
    LANGUAGE_DE = 5
    LANGUAGE_ES = 6
    LANGUAGE_PT = 7
    LANGUAGE_RU = 8
    LANGUAGE_JP = 9
    LANGUAGE_KR = 10
    LANGUAGE_TH = 11
    LANGUAGE_VN = 12
    LANGUAGE_ID = 13


class PlatformType(betterproto.Enum):
    EDITOR = 0
    IOS = 1
    ANDROID = 2
    PC = 3
    PS4 = 4
    SERVER = 5
    CLOUD_ANDROID = 6
    CLOUD_IOS = 7


class MapMarkPointType(betterproto.Enum):
    NPC = 0
    QUEST = 1
    SPECIAL = 2
    MINE = 3
    COLLECTION = 4
    MONSTER = 5


class MapMarkFromType(betterproto.Enum):
    MAP_MARK_FROM_TYPE_NOE = 0
    MAP_MARK_FROM_TYPE_MONSTER = 1
    MAP_MARK_FROM_TYPE_QUEST = 2


class DungeonCandidateTeamInviteState(betterproto.Enum):
    DUNGEON_CANDIDATE_TEAM_INVITE_STATE_NONE = 0
    DUNGEON_CANDIDATE_TEAM_INVITE_STATE_SEND = 1
    DUNGEON_CANDIDATE_TEAM_INVITE_STATE_ACCEPT = 2
    DUNGEON_CANDIDATE_TEAM_INVITE_STATE_REFUSE = 3


class MonsterGuestBanDrop(betterproto.Enum):
    MONSTER_GUEST_BAN_NONE = 0
    MONSTER_GUEST_BAN_DIE_EXP = 1
    MONSTER_GUEST_BAN_DIE_LUA = 2
    MONSTER_GUEST_BAN_DIE_EXCEL = 4
    MONSTER_GUEST_BAN_DIE_ACTIVITY = 8
    MONSTER_GUEST_BAN_DROP_HP = 16
    MONSTER_GUEST_BAN_SUBFIELD = 32


class GadgetGuestBanDrop(betterproto.Enum):
    GADGET_GUEST_BAN_NONE = 0
    GADGET_GUEST_BAN_DIE_LUA = 1
    GADGET_GUEST_BAN_SUBFIELD = 2


class TrialAvatarGrantRecordGrantReason(betterproto.Enum):
    INVALID = 0
    GRANT_BY_QUEST = 1


class ForwardType(betterproto.Enum):
    FORWARD_LOCAL = 0
    FORWARD_TO_ALL = 1
    FORWARD_TO_ALL_EXCEPT_CUR = 2
    FORWARD_TO_HOST = 3
    FORWARD_TO_ALL_GUEST = 4
    FORWARD_TO_PEER = 5
    FORWARD_TO_PEERS = 6
    FORWARD_ONLY_SERVER = 7
    FORWARD_TO_ALL_EXIST_EXCEPT_CUR = 8


class HitColliderType(betterproto.Enum):
    HIT_COLLIDER_INVALID = 0
    HIT_COLLIDER_HIT_BOX = 1
    HIT_COLLIDER_WET_HIT_BOX = 2
    HIT_COLLIDER_HEAD_BOX = 3


class CombatTypeArgument(betterproto.Enum):
    COMBAT_NONE = 0
    COMBAT_EVT_BEING_HIT = 1
    COMBAT_ANIMATOR_STATE_CHANGED = 2
    COMBAT_FACE_TO_DIR = 3
    COMBAT_SET_ATTACK_TARGET = 4
    COMBAT_RUSH_MOVE = 5


class EvtBeingHitNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 301
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtAnimatorParameterNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 302
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HostPlayerNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 303
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EvtDoSkillSuccNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 304
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtCreateGadgetNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 305
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtDestroyGadgetNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 306
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtFaceToEntityNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 307
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtFaceToDirNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 308
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtCostStaminaNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 309
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtSetAttackTargetNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 310
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtAnimatorStateChangedNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 311
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtRushMoveNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 312
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtBulletHitNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 313
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtBulletDeactiveNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 314
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtEntityStartDieEndNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 315
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtBulletMoveNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 322
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtAvatarEnterFocusNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 323
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtAvatarExitFocusNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 324
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtAvatarUpdateFocusNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 325
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EntityAuthorityChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 326
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarBuffAddNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 327
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarBuffDelNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 328
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MonsterAlertChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 329
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MonsterForceAlertNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 330
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MonsterForceAiNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 331
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarEnterElementViewNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 332
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TriggerCreateGadgetToEquipPartNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 333
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtEntityRenderersChangedNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 334
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AnimatorForceSetAirMoveNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 335
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtAiSyncSkillCdNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 336
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtBeingHitsCombineNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 337
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtAvatarSitDownNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 341
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtAvatarStandUpNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 342
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class CreateMassiveEntityReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 343
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class CreateMassiveEntityRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 344
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CreateMassiveEntityNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 345
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DestroyMassiveEntityNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 346
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MassiveEntityStateChangedNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 347
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SyncTeamEntityNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 348
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DelTeamEntityNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 349
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CombatInvocationsNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 350
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AbilityInvokeArgument(betterproto.Enum):
    ABILITY_NONE = 0
    ABILITY_META_MODIFIER_CHANGE = 1
    ABILITY_META_COMMAND_MODIFIER_CHANGE_REQUEST = 2
    ABILITY_META_SPECIAL_FLOAT_ARGUMENT = 3
    ABILITY_META_OVERRIDE_PARAM = 4
    ABILITY_META_CLEAR_OVERRIDE_PARAM = 5
    ABILITY_META_REINIT_OVERRIDEMAP = 6
    ABILITY_META_GLOBAL_FLOAT_VALUE = 7
    ABILITY_META_CLEAR_GLOBAL_FLOAT_VALUE = 8
    ABILITY_META_ABILITY_ELEMENT_STRENGTH = 9
    ABILITY_META_ADD_OR_GET_ABILITY_AND_TRIGGER = 10
    ABILITY_META_SET_KILLED_SETATE = 11
    ABILITY_META_SET_ABILITY_TRIGGER = 12
    ABILITY_META_ADD_NEW_ABILITY = 13
    ABILITY_META_REMOVE_ABILITY = 14
    ABILITY_META_SET_MODIFIER_APPLY_ENTITY = 15
    ABILITY_META_MODIFIER_DURABILITY_CHANGE = 16
    ABILITY_ACTION_TRIGGER_ABILITY = 50
    ABILITY_ACTION_SET_CRASH_DAMAGE = 51
    ABILITY_ACTION_EFFECT = 52
    ABILITY_ACTION_SUMMON = 53
    ABILITY_ACTION_BLINK = 54
    ABILITY_ACTION_CREATE_GADGET = 55
    ABILITY_ACTION_APPLY_LEVEL_MODIFIER = 56
    ABILITY_ACTION_GENERATE_ELEM_BALL = 57
    ABILITY_MIXIN_AVATAR_STEER_BY_CAMERA = 100
    ABILITY_MIXIN_MONSTER_DEFEND = 101
    ABILITY_MIXIN_WIND_ZONE = 102
    ABILITY_MIXIN_COST_STAMINA = 103
    ABILITY_MIXIN_ELITE_SHIELD = 104
    ABILITY_MIXIN_ELEMENT_SHIELD = 105
    ABILITY_MIXIN_GLOBAL_SHIELD = 106
    ABILITY_MIXIN_SHIELD_BAR = 107
    ABILITY_MIXIN_WIND_SEED_SPAWNER = 108


class ModifierAction(betterproto.Enum):
    ADDED = 0
    REMOVED = 1


class AbilityResetReasonType(betterproto.Enum):
    ABILITY_CHANGE_SKILL_DEPOT = 0
    ABILITY_UNLOCK_TALENT = 1
    ABILITY_CHANGE_EQUIP = 2
    ABILITY_PROUD_SKILL = 3
    ABILITY_AVATAR_SKILL = 4
    ABILITY_CORE_PROUD_SKILL = 5
    ABILITY_TALENT_EXTRA_LEVEL = 6


class AbilityInvocationFixedNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1101
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AbilityInvocationsNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1102
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ClientAbilityInitBeginNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1103
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ClientAbilityInitFinishNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1104
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AbilityInvocationFailNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1105
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarAbilityResetNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1106
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientAbilitiesInitFinishCombineNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1107
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ElementReactionLogNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1108
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarAbilityResetFinishNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1109
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WindSeedClientNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1110
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetActivityScheduleReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2001
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetActivityScheduleRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2002
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetActivityInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2003
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetActivityInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2004
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ActivityPlayOpenAnimNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2005
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ActivityInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2006
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ActivityScheduleInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2007
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SeaLampFlyLampReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2014
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SeaLampFlyLampRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2015
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SeaLampTakeContributionRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2016
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SeaLampTakeContributionRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2017
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SeaLampTakePhaseRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2018
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SeaLampTakePhaseRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2019
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SeaLampContributeItemReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2020
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SeaLampContributeItemRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2021
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerAnnounceNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2022
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerAnnounceRevokeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2023
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LoadActivityTerrainNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2024
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarAddNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1701
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarDelNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1702
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetUpAvatarTeamReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1703
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetUpAvatarTeamRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1704
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChooseCurAvatarTeamReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1705
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChooseCurAvatarTeamRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1706
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChangeAvatarReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1707
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChangeAvatarRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1708
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarPromoteReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1709
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarPromoteRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1710
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SpringUseReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1711
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SpringUseRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1712
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RefreshBackgroundAvatarReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1713
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RefreshBackgroundAvatarRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1714
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarTeamUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1715
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1716
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarUpgradeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1717
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarUpgradeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1718
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarDieAnimationEndReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1719
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarDieAnimationEndRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1720
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarChangeElementTypeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1721
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarChangeElementTypeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1722
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarFetterDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1723
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarExpeditionDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1724
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarExpeditionAllDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1725
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarExpeditionAllDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1726
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarExpeditionStartReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1727
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarExpeditionStartRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1728
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarExpeditionCallBackReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1729
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarExpeditionCallBackRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1730
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarExpeditionGetRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1731
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarExpeditionGetRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1732
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChangeMpTeamAvatarReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1734
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChangeMpTeamAvatarRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1735
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChangeTeamNameReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1736
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChangeTeamNameRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1737
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneTeamUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1738
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneTeamMpDisplayCurAvatarNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1739
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FocusAvatarReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1740
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FocusAvatarRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1741
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonDataType(betterproto.Enum):
    DUNGEON_DATA_NONE = 0
    DUNGEON_DATA_END_TIME = 1
    DUNGEON_DATA_MONSTER_DIE_COUNT = 2
    DUNGEON_DATA_LEVEL_CONFIG_ID = 3
    DUNGEON_DATA_TOWER_MONTHLY_LEVEL_CONFIG_ID = 4
    DUNGEON_DATA_TOWER_FLOOR_LEVEL_CONFIG_ID = 5


class DungeonCandidateTeamPlayerLeaveReason(betterproto.Enum):
    DUNGEON_CANDIDATE_TPLR_NORMAL = 0
    DUNGEON_CANDIDATE_TPLR_DIE = 1
    DUNGEON_CANDIDATE_TPLR_BE_KICK = 2
    DUNGEON_CANDIDATE_DISCONNECT = 3


class DungeonCandidateTeamDismissReason(betterproto.Enum):
    DUNGEON_CANDIDATE_TPDR_NORMAL = 0
    DUNGEON_CANDIDATE_TPDR_DIE = 1


class DungeonEntryInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 901
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonEntryInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 902
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerEnterDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 903
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerEnterDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 904
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerQuitDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 905
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerQuitDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 906
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonWayPointNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 907
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonWayPointActivateReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 908
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonWayPointActivateRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 909
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 910
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonPlayerDieNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 911
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonDieOptionReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 912
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonDieOptionRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 913
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonShowReminderNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 914
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonPlayerDieReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 915
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonPlayerDieRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 916
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 917
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonChallengeBeginNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 918
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonChallengeFinishNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 919
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChallengeDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 920
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonFollowNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 921
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonGetStatueDropReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 922
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonGetStatueDropRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 923
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChallengeRecordNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 924
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 925
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamInviteNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 926
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamRefuseNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 927
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamPlayerLeaveNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 928
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamDismissNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 929
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamCreateReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 930
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonCandidateTeamCreateRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 931
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamInviteReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 932
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonCandidateTeamInviteRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 933
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamKickReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 934
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonCandidateTeamKickRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 935
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamLeaveReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 936
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonCandidateTeamLeaveRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 937
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamReplyInviteReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 938
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonCandidateTeamReplyInviteRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 939
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamSetReadyReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 940
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonCandidateTeamSetReadyRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 941
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamChangeAvatarReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 942
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonCandidateTeamChangeAvatarRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 943
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetDailyDungeonEntryInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 944
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetDailyDungeonEntryInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 945
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetGachaInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1501
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetGachaInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1502
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DoGachaReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1503
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DoGachaRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1504
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class InteractType(betterproto.Enum):
    INTERACT_NONE = 0
    INTERACT_PICK_ITEM = 1
    INTERACT_GATHER = 2
    INTERACT_OPEN_CHEST = 3
    INTERACT_OPEN_STATUE = 4
    INTERACT_CONSUM = 5


class InterOpType(betterproto.Enum):
    INTER_OP_FINISH = 0
    INTER_OP_START = 1


class GadgetInteractReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 801
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GadgetInteractRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 802
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GadgetStateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 803
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WorktopOptionNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 804
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SelectWorktopOptionReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 805
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SelectWorktopOptionRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 806
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BossChestActivateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 807
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class InvestigationState(betterproto.Enum):
    INVALID = 0
    IN_PROGRESS = 1
    COMPLETE = 2
    REWARD_TAKEN = 3


class InvestigationTargetState(betterproto.Enum):
    INVALID = 0
    IN_PROGRESS = 1
    COMPLETE = 2
    REWARD_TAKEN = 3


class PlayerInvestigationAllInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1901
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeInvestigationRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1902
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeInvestigationRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1903
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeInvestigationTargetRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1904
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeInvestigationTargetRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1905
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetInvestigationMonsterReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1906
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class InvestigationMonsterLockState(betterproto.Enum):
    LOCK_NONE = 0
    LOCK_QUEST = 1


class GetInvestigationMonsterRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1907
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerInvestigationNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1908
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerInvestigationTargetNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1909
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ForgeQueueManipulateType(betterproto.Enum):
    FORGE_QUEUE_MANIPULATE_TYPE_RECEIVE_OUTPUT = 0
    FORGE_QUEUE_MANIPULATE_TYPE_STOP_FORGE = 1


class PlayerStoreNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 601
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class StoreWeightLimitNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 602
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class StoreItemChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 603
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class StoreItemDelNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 604
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ItemAddHintNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 605
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UseItemReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 608
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class UseItemRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 609
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DropItemReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 610
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DropItemRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 611
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WearEquipReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 614
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WearEquipRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 615
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeoffEquipReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 616
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeoffEquipRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 617
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarEquipChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 618
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WeaponUpgradeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 619
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WeaponUpgradeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 620
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WeaponPromoteReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 621
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WeaponPromoteRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 622
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ReliquaryUpgradeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 623
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ReliquaryUpgradeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 624
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ReliquaryPromoteReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 625
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ReliquaryPromoteRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 626
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarCardChangeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 627
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarCardChangeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 628
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GrantRewardNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 629
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WeaponAwakenReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 630
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WeaponAwakenRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 631
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ItemCdGroupTimeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 632
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DropHintNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 633
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CombineReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 634
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class CombineRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 635
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ForgeQueueDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 636
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ForgeGetQueueDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 637
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ForgeGetQueueDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 638
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ForgeStartReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 639
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ForgeStartRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 640
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ForgeQueueManipulateReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 641
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ForgeQueueManipulateRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 642
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ResinChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 643
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WorldResinChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 644
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BuyWorldResinReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 647
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BuyWorldResinRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 648
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BuyResinReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 649
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BuyResinRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 650
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MaterialDeleteReturnNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 651
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeMaterialDeleteReturnReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 652
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeMaterialDeleteReturnRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 653
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MaterialDeleteUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 654
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AuthkeySignType(betterproto.Enum):
    AUTHKEY_SIGN_TYPE_NONE = 0
    AUTHKEY_SIGN_TYPE_DEFAULT = 1
    AUTHKEY_SIGN_TYPE_RSA = 2


class MailChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1402
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ReadMailNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1403
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetMailItemReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1404
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetMailItemRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1405
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DelMailReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1406
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DelMailRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1407
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetAuthkeyReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1408
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetAuthkeyRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1409
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientNewMailNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1410
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetAllMailReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1411
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetAllMailRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1412
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SvrMsgId(betterproto.Enum):
    MSG_UNKNOWN = 0
    MSG_BLOCK_REFRESH_COUNTDOWN = 1
    MSG_AVATAR_REVIVE_BY_STATUE = 2
    MSG_DAILY_TASK_REWARD_MAX_NUM = 3


class ServerLogType(betterproto.Enum):
    SERVER_LOG_NONE = 0
    SERVER_LOG_ABILITY = 1
    SERVER_LOG_LEVEL = 2
    SERVER_LOG_ENTITY = 3


class ServerLogLevel(betterproto.Enum):
    LOG_LEVEL_NONE = 0
    LOG_LEVEL_DEBUG = 1
    LOG_LEVEL_INFO = 2
    LOG_LEVEL_WARNING = 3
    LOG_LEVEL_ERROR = 4


class ClientReconnectReason(betterproto.Enum):
    CLIENT_RECONNNECT_NONE = 0
    CLIENT_RECONNNECT_QUIT_MP = 1


class KeepAliveNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GmTalkReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GmTalkRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ShowMessageNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PingReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PingRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetOnlinePlayerListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetOnlinePlayerListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 9
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerTimeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 1


class ServerLogNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 11
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 1


class ClientReconnectNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientFpsStatusNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 13
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RobotPushPlayerDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 14
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientReportNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 15
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MonsterSummonTagNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1301
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerApplyEnterMpNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1801
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerApplyEnterMpReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1802
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerApplyEnterMpRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1803
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerApplyEnterMpResultNotifyReason(betterproto.Enum):
    PLAYER_JUDGE = 0
    SCENE_CANNOT_ENTER = 1
    PLAYER_CANNOT_ENTER_MP = 2
    SYSTEM_JUDGE = 3
    ALLOW_ENTER_PLAYER_FULL = 4
    WORLD_LEVEL_LOWER_THAN_HOST = 5


class PlayerApplyEnterMpResultNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1804
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerApplyEnterMpResultReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1805
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerApplyEnterMpResultRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1806
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerQuitFromMpNotifyQuitReason(betterproto.Enum):
    INVALID = 0
    HOST_NO_OTHER_PLAYER = 1
    KICK_BY_HOST = 2
    BACK_TO_MY_WORLD = 3
    KICK_BY_HOST_LOGOUT = 4


class PlayerQuitFromMpNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1807
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerPreEnterMpNotifyState(betterproto.Enum):
    INVALID = 0
    START = 1
    TIMEOUT = 2


class PlayerPreEnterMpNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1808
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetPlayerMpModeAvailabilityReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1809
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetPlayerMpModeAvailabilityRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1810
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class NpcTalkType(betterproto.Enum):
    TALK_NONE = 0
    TALK_START = 1
    TALK_CHOOSE = 2
    TALK_NEXT = 3
    TALK_FINISH = 4


class NpcTalkReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 501
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class NpcTalkRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 502
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetSceneNpcPositionReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 504
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetSceneNpcPositionRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 505
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QueryPathReqOptionType(betterproto.Enum):
    OPTION_NONE = 0
    OPTION_NORMAL = 1
    OPTION_FIRST_CAN_GO = 2


class QueryPathReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2301
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class QueryPathRspPathStatusType(betterproto.Enum):
    STATUS_FAIL = 0
    STATUS_SUCC = 1
    STATUS_PARTIAL = 2


class QueryPathRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2302
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ObstacleInfoShapeType(betterproto.Enum):
    OBSTACLE_SHAPE_CAPSULE = 0
    OBSTACLE_SHAPE_BOX = 1


class ObstacleModifyNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2303
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PathfindingPingNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2304
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PathfindingEnterSceneReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2305
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PathfindingEnterSceneRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2306
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GmShowObstacleReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2351
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GmShowObstacleRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2352
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GmShowNavMeshReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2353
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PbNavMeshPolyEdgeType(betterproto.Enum):
    INNER = 0
    TILE_BOUND = 1
    TILE_BOUND_UNCONNECT = 2


class GmShowNavMeshRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2354
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetPlayerTokenReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 101
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetPlayerTokenRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 102
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerLoginReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 103
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerLoginRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 104
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerLogoutReqReason(betterproto.Enum):
    DISCONNECT = 0
    CLIENT_REQ = 1
    TIMEOUT = 2
    ADMIN_REQ = 3
    SERVER_CLOSE = 4
    GM_CLEAR = 5
    PLAYER_TRANSFER = 6


class PlayerLogoutReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 105
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerLogoutRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 106
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerLogoutNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 107


class PlayerDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 108
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChangeGameTimeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 109
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChangeGameTimeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 110
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerGameTimeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 111
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerPropNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 112
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientTriggerEventNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 113
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetPlayerPropReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 114
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetPlayerPropRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 115
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetPlayerBornDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 116
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetPlayerBornDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 117
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DoSetPlayerBornDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 118
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerPropChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 119
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetPlayerNameReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 120
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetPlayerNameRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 121
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetOpenStateReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 122
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetOpenStateRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 123
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class OpenStateUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 124
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class OpenStateChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 125
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerCookReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 126
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerCookRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 127
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerRandomCookReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 128
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerRandomCookRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 129
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CookDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 130
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CookRecipeDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 131
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CookGradeDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 132
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerCompoundMaterialReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 133
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerCompoundMaterialRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 134
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeCompoundOutputReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 135
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeCompoundOutputRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 136
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CompoundDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 137
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetCompoundDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 138
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetCompoundDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 139
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerTimeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 140
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerSetPauseReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 141
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerSetPauseRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 142
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerSetLanguageReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 143
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerSetLanguageRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 144
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DataResVersionNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 145
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DailyTaskDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 146
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DailyTaskProgressNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 147
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DailyTaskScoreRewardNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 148
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WorldOwnerDailyTaskNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 149
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AddRandTaskInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 150
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RemoveRandTaskInfoNotifyFinishReason(betterproto.Enum):
    DEFAULT = 0
    CLEAR = 1
    DISTANCE = 2
    FINISH = 3


class RemoveRandTaskInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 151
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakePlayerLevelRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 152
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakePlayerLevelRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 153
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerLevelRewardUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 154
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GivingRecordNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 155
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GivingRecordChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 156
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ItemGivingReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 157
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ItemGivingRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 158
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerCookArgsReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 159
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerCookArgsRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 160
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerLuaShellNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 161
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerDisconnectClientNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 162
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PropChangeReason(betterproto.Enum):
    PROP_CHANGE_NONE = 0
    PROP_CHANGE_STATUE_RECOVER = 1
    PROP_CHANGE_ENERGY_BALL = 2
    PROP_CHANGE_ABILITY = 3
    PROP_CHANGE_LEVELUP = 4
    PROP_CHANGE_ITEM = 5
    PROP_CHANGE_AVATAR_CARD = 6
    PROP_CHANGE_CITY_LEVELUP = 7
    PROP_CHANGE_AVATAR_UPGRADE = 8
    PROP_CHANGE_AVATAR_PROMOTE = 9
    PROP_CHANGE_PLAYER_ADD_EXP = 10
    PROP_CHANGE_FINISH_QUEST = 11


class MarkNewType(betterproto.Enum):
    MARK_NEW_TYPE_NONE = 0
    MARK_NEW_TYPE_COMBINE = 1
    MARK_NEW_TYPE_FORGE = 2


class EntityPropNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1201
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LifeStateChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1202
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EntityFightPropNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1203
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EntityFightPropUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1204
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarFightPropNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1205
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarFightPropUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1206
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EntityFightPropChangeReasonNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1207
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarLifeStateChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1208
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarPropChangeReasonNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1209
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerPropChangeReasonNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1210
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarPropNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1211
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MarkNewNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1212
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChapterState(betterproto.Enum):
    CHAPTER_STATE_INVALID = 0
    CHAPTER_STATE_UNABLE_TO_BEGIN = 1
    CHAPTER_STATE_BEGIN = 2
    CHAPTER_STATE_END = 3


class QuestListNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 401
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QuestListUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 402
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QuestDelNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 403
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FinishedParentQuestNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 404
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FinishedParentQuestUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 405
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AddQuestContentProgressReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 406
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AddQuestContentProgressRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 407
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetQuestTalkHistoryReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 408
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetQuestTalkHistoryRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 409
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QuestCreateEntityReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 410
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class QuestCreateEntityRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 411
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QuestDestroyEntityReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 412
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class QuestDestroyEntityRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 413
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LogTalkNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 414
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class LogCutsceneNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 415
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChapterStateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 416
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QuestProgressUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 417
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QuestUpdateQuestVarReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 418
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class QuestUpdateQuestVarRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 419
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QuestUpdateQuestVarNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 420
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QuestDestroyNpcReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 421
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class QuestDestroyNpcRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 422
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterType(betterproto.Enum):
    ENTER_NONE = 0
    ENTER_SELF = 1
    ENTER_GOTO = 2
    ENTER_JUMP = 3
    ENTER_OTHER = 4
    ENTER_BACK = 5
    ENTER_DUNGEON = 6
    ENTER_DUNGEON_REPLAY = 7
    ENTER_GOTO_BY_PORTAL = 8


class VisionType(betterproto.Enum):
    VISION_NONE = 0
    VISION_MEET = 1
    VISION_REBORN = 2
    VISION_REPLACE = 3
    VISION_WAYPOINT_REBORN = 4
    VISION_MISS = 5
    VISION_DIE = 6
    VISION_GATHER_ESCAPE = 7
    VISION_REFRESH = 8
    VISION_TRANSPORT = 9
    VISION_REPLACE_DIE = 10


class CreateReason(betterproto.Enum):
    CREATE_NONE = 0
    CREATE_QUEST = 1
    CREATE_ENERGY = 2


class TransmitReason(betterproto.Enum):
    TRANSMIT_NONE = 0
    TRANSMIT_QUEST = 1


class DropSubfieldType(betterproto.Enum):
    DROP_SUBFIELD_NONE = 0
    DROP_SUBFIELD_ONE = 1


class SealBattleType(betterproto.Enum):
    SEAL_BATTLE_KEEP_ALIVE = 0
    SEAL_BATTLE_KILL_MONSTER = 1


class DungeonEntryBlockReason(betterproto.Enum):
    DUNGEON_ENTRY_REASON_NONE = 0
    DUNGEON_ENTRY_REASON_LEVEL = 1
    DUNGEON_ENTRY_REASON_QUEST = 2
    DUNGEON_ENTRY_REASON_MULIPLE = 3


class PlayerEnterSceneNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 201
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LeaveSceneReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 202
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class LeaveSceneRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 203
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneInitFinishReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 204
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneInitFinishRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 205
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneEntityAppearNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 206
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneEntityDisappearNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 207
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneEntityMoveReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 208
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 0
    IS_ALLOW_CLIENT = 1


class SceneEntityMoveRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 209
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 0


class SceneAvatarStaminaStepReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 210
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneAvatarStaminaStepRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 211
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 1


class SceneEntityMoveNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 212
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 0


class ScenePlayerLocationNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 213
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 1


class GetScenePointReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 214
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetScenePointRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 215
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterTransPointRegionNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 216
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ExitTransPointRegionNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 217
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ScenePointUnlockNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 218
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneTransToPointReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 219
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneTransToPointRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 220
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EntityJumpNotifyType(betterproto.Enum):
    NULL = 0
    ACTIVE = 1
    PASSIVE = 2


class EntityJumpNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 221
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetSceneAreaReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 222
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetSceneAreaRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 223
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneAreaUnlockNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 224
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneEntityDrownReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 225
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneEntityDrownRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 226
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneCreateEntityReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 227
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneCreateEntityRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 228
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneDestroyEntityReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 229
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneDestroyEntityRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 230
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneForceUnlockNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 231
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneForceLockNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 232
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterWorldAreaReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 233
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EnterWorldAreaRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 234
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EntityForceSyncReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 235
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EntityForceSyncRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 236
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneAreaExploreNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 237
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneGetAreaExplorePercentReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 238
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneGetAreaExplorePercentRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 239
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientTransmitReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 240
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ClientTransmitRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 241
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterSceneWeatherAreaNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 242
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ExitSceneWeatherAreaNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 243
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneAreaWeatherNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 244
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ScenePlayerInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 245
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WorldPlayerLocationNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 246
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BeginCameraSceneLookNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 247
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EndCameraSceneLookNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 248
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MarkEntityInMinMapNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 249
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UnmarkEntityInMinMapNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 250
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DropSubfieldReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 251
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DropSubfieldRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 252
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ExecuteGroupTriggerReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 253
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ExecuteGroupTriggerRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 254
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LevelupCityReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 255
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class LevelupCityRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 256
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneRouteChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 257
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlatformStartRouteNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 258
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlatformStopRouteNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 259
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlatformChangeRouteNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 260
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ScenePlayerSoundNotifyPlaySoundType(betterproto.Enum):
    PLAY_SOUND_NONE = 0
    PLAY_SOUND_START = 1
    PLAY_SOUND_STOP = 2


class ScenePlayerSoundNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 261
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PersonalSceneJumpReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 262
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PersonalSceneJumpRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 263
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SealBattleBeginNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 264
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SealBattleEndNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 265
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SealBattleProgressNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 266
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientPauseNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 267
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerEnterSceneInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 268
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class JoinPlayerSceneReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 269
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class JoinPlayerSceneRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 270
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneKickPlayerReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 271
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneKickPlayerRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 272
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneKickPlayerNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 273
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HitClientTrivialNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 274
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BackMyWorldReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 275
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BackMyWorldRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 276
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SeeMonsterReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 277
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SeeMonsterRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 278
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AddSeenMonsterNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 279
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AllSeenMonsterNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 280
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneTimeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 281
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterSceneReadyReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 282
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EnterSceneReadyRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 283
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterScenePeerNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 284
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterSceneDoneReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 285
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EnterSceneDoneRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 286
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WorldPlayerDieNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 287
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WorldPlayerReviveReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 288
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WorldPlayerReviveRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 289
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class JoinPlayerFailNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 290
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetSceneWeatherAreaReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 291
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetSceneWeatherAreaRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 292
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ExecuteGadgetLuaReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 293
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ExecuteGadgetLuaRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 294
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CutSceneBeginNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 295
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CutSceneFinishNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 296
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class CutSceneEndNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 297
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientScriptEventNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 298
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneEntitiesMovesReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 299
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 0
    IS_ALLOW_CLIENT = 1


class SceneEntitiesMovesRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 300
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 0


class SceneEntitiesMoveCombineNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3001
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 0


class UnlockTransPointReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3002
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class UnlockTransPointRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3003
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 1


class PlatformRouteStateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3004
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneWeatherForcastReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3005
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneWeatherForcastRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3006
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MarkMapReqOperation(betterproto.Enum):
    ADD = 0
    MOD = 1
    DEL = 2
    GET = 3


class MarkMapReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3010
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MarkMapRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3011
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AllMarkPointNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3012
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WorldDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3013
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WorldDataNotifyDataType(betterproto.Enum):
    DATA_NONE = 0
    WORLD_LEVEL = 1


class EntityMoveRoomNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3014
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WorldPlayerInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3015
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PostEnterSceneReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3016
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PostEnterSceneRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3017
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChatInfoSystemHintType(betterproto.Enum):
    CHAT_NONE = 0
    CHAT_ENTER_WORLD = 1
    CHAT_LEAVE_WORLD = 2


class PlayerChatReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3018
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerChatRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3019
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerChatNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3020
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerChatCdNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3021
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChatHistoryNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3022
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3023
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonEntryToBeExploreNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3024
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetDungeonEntryExploreConditionReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3035
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetDungeonEntryExploreConditionRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3036
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UnfreezeGroupLimitNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3037
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetShopReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 701
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetShopRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 702
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BuyGoodsReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 703
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BuyGoodsRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 704
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UnlockAvatarTalentReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1001
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class UnlockAvatarTalentRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1002
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarUnlockTalentNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1003
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarSkillDepotChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1004
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BigTalentPointConvertReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1005
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BigTalentPointConvertRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1006
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarSkillMaxChargeCountNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1007
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarSkillInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1008
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ProudSkillUpgradeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1009
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ProudSkillUpgradeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1010
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ProudSkillChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1011
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarSkillUpgradeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1012
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarSkillUpgradeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1013
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarSkillChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1014
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ProudSkillExtraLevelNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1015
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CanUseSkillNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1016
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetPlayerFriendListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4001
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetPlayerFriendListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4002
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AskAddFriendReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4005
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AskAddFriendRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4006
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AddFriendReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4007
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AddFriendRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4008
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TowerBriefDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2401
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerFloorRecordChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2402
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerCurLevelRecordChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2403
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerDailyRewardProgressChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2404
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerTeamSelectReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2406
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TowerTeamSelectRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2407
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerAllDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2408
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TowerAllDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2409
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerEnterLevelReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2411
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TowerEnterLevelRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2412
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerBuffSelectReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2413
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TowerBuffSelectRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2414
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerSurrenderReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2421
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TowerSurrenderRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2422
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerGetFloorStarRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2423
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TowerGetFloorStarRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2424
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerLevelEndNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2430
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerLevelEndNotifyContinueStateType(betterproto.Enum):
    CONTINUE_STATE_CAN_NOT_CONTINUE = 0
    CONTINUE_STATE_CAN_ENTER_NEXT_LEVEL = 1
    CONTINUE_STATE_CAN_ENTER_NEXT_FLOOR = 2


class TowerLevelStarCondNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2431
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerMiddleLevelChangeTeamNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2432
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PushTipsState(betterproto.Enum):
    PUSH_TIPS_STATE_NONE = 0
    PUSH_TIPS_STATE_START = 1
    PUSH_TIPS_STATE_READ = 2
    PUSH_TIPS_STATE_FINISH = 3


class WatcherAllDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2201
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WatcherChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2202
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WatcherEventNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2203
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WatcherEventTypeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2204
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PushTipsAllDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2221
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PushTipsChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2222
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PushTipsReadFinishReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2223
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PushTipsReadFinishRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2224
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetPushTipsRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2225
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetPushTipsRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2226
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


@dataclass(eq=False, repr=False)
class ParamList(betterproto.Message):
    param_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PropValue(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    val: int = betterproto.int64_field(4)
    ival: int = betterproto.int64_field(2, group="value")
    fval: float = betterproto.float_field(3, group="value")


@dataclass(eq=False, repr=False)
class RegionCustomConfig(betterproto.Message):
    close_antidebug: bool = betterproto.bool_field(1)
    force_kill: bool = betterproto.bool_field(2)
    antidebug_pc: bool = betterproto.bool_field(3)
    antidubug_ios: bool = betterproto.bool_field(4)
    antidubug_androd: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class RegionSimpleInfo(betterproto.Message):
    name: str = betterproto.string_field(1)
    title: str = betterproto.string_field(2)
    type: str = betterproto.string_field(3)
    dispatch_url: str = betterproto.string_field(4)
    region_custom_config: "RegionCustomConfig" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ClientCustomConfig(betterproto.Message):
    visitor: bool = betterproto.bool_field(1)
    sdkenv: str = betterproto.string_field(2)
    debugmenu: bool = betterproto.bool_field(3)
    debuglogswitch: List[int] = betterproto.int32_field(4)
    debuglog: bool = betterproto.bool_field(5)
    devicelist: Dict[str, str] = betterproto.map_field(
        6, betterproto.TYPE_STRING, betterproto.TYPE_STRING
    )
    loadjsondata: bool = betterproto.bool_field(7)
    showexception: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class QueryRegionListHttpRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    region_list: List["RegionSimpleInfo"] = betterproto.message_field(2)
    client_custom_config: str = betterproto.string_field(3)
    client_config: "ClientCustomConfig" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class ForceUpdateInfo(betterproto.Message):
    force_update_url: str = betterproto.string_field(1)
    client_config: "ClientCustomConfig" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class StopServerInfo(betterproto.Message):
    stop_begin_time: int = betterproto.uint32_field(1)
    stop_end_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ResVersionConfig(betterproto.Message):
    version: int = betterproto.uint32_field(1)
    relogin: bool = betterproto.bool_field(2)
    md5: str = betterproto.string_field(3)
    release_total_size: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class RegionInfo(betterproto.Message):
    gateserver_ip: str = betterproto.string_field(1)
    gateserver_port: int = betterproto.uint32_field(2)
    area_type: str = betterproto.string_field(7)
    resource_url: str = betterproto.string_field(8)
    data_url: str = betterproto.string_field(9)
    feedback_url: str = betterproto.string_field(10)
    bulletin_url: str = betterproto.string_field(11)
    resource_url_bak: str = betterproto.string_field(12)
    data_url_bak: str = betterproto.string_field(13)
    client_data_version: int = betterproto.uint32_field(14)
    res_version: int = betterproto.uint32_field(15)
    handbook_url: str = betterproto.string_field(16)
    client_silence_data_version: int = betterproto.uint32_field(18)
    client_data_md5: str = betterproto.string_field(19)
    client_silence_data_md5: str = betterproto.string_field(20)
    res_md5: str = betterproto.string_field(21)
    res_version_config: "ResVersionConfig" = betterproto.message_field(22)
    secret_key: bytes = betterproto.bytes_field(23)


@dataclass(eq=False, repr=False)
class QueryCurrRegionHttpRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    msg: str = betterproto.string_field(2)
    region_info: "RegionInfo" = betterproto.message_field(3)
    client_config: "ClientCustomConfig" = betterproto.message_field(10)
    force_udpate: "ForceUpdateInfo" = betterproto.message_field(4, group="detail")
    stop_server: "StopServerInfo" = betterproto.message_field(5, group="detail")


@dataclass(eq=False, repr=False)
class Reliquary(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    exp: int = betterproto.uint32_field(2)
    promote_level: int = betterproto.uint32_field(3)
    main_prop_id: int = betterproto.uint32_field(4)
    append_prop_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class Weapon(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    exp: int = betterproto.uint32_field(2)
    promote_level: int = betterproto.uint32_field(3)
    affix_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class MaterialDeleteInfo(betterproto.Message):
    has_delete_config: bool = betterproto.bool_field(1)
    count_down_delete: "MaterialDeleteInfoCountDownDelete" = betterproto.message_field(
        2, group="delete_info"
    )
    date_delete: "MaterialDeleteInfoDateTimeDelete" = betterproto.message_field(
        3, group="delete_info"
    )


@dataclass(eq=False, repr=False)
class MaterialDeleteInfoCountDownDelete(betterproto.Message):
    delete_time_num_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    config_count_down_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MaterialDeleteInfoDateTimeDelete(betterproto.Message):
    delete_time: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class Material(betterproto.Message):
    count: int = betterproto.uint32_field(1)
    delete_info: "MaterialDeleteInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class Equip(betterproto.Message):
    reliquary: "Reliquary" = betterproto.message_field(1, group="detail")
    weapon: "Weapon" = betterproto.message_field(2, group="detail")


@dataclass(eq=False, repr=False)
class Item(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    guid: int = betterproto.uint64_field(2)
    material: "Material" = betterproto.message_field(5, group="detail")
    equip: "Equip" = betterproto.message_field(6, group="detail")


@dataclass(eq=False, repr=False)
class ItemParam(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EquipParam(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    item_num: int = betterproto.uint32_field(2)
    item_level: int = betterproto.uint32_field(3)
    promote_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class EquipParamList(betterproto.Message):
    item_list: List["EquipParam"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Reward(betterproto.Message):
    reward_id: int = betterproto.uint32_field(1)
    item_list: List["ItemParam"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AbilityString(betterproto.Message):
    str: builtins.str = betterproto.string_field(1, group="type")
    hash: int = betterproto.uint32_field(2, group="type")


@dataclass(eq=False, repr=False)
class AbilityFloatValue(betterproto.Message):
    value: float = betterproto.float_field(1)


@dataclass(eq=False, repr=False)
class AbilityScalarValueEntry(betterproto.Message):
    key: "AbilityString" = betterproto.message_field(1)
    value_type: "AbilityScalarType" = betterproto.enum_field(2)
    float_value: float = betterproto.float_field(3, group="value")
    string_value: str = betterproto.string_field(4, group="value")
    int_value: int = betterproto.int32_field(5, group="value")
    uint_value: int = betterproto.uint32_field(6, group="value")


@dataclass(eq=False, repr=False)
class AbilityAppliedAbility(betterproto.Message):
    ability_name: "AbilityString" = betterproto.message_field(1)
    ability_override: "AbilityString" = betterproto.message_field(2)
    override_map: List["AbilityScalarValueEntry"] = betterproto.message_field(3)
    instanced_ability_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class AbilityAttachedModifier(betterproto.Message):
    is_invalid: bool = betterproto.bool_field(1)
    owner_entity_id: int = betterproto.uint32_field(2)
    instanced_modifier_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ModifierDurability(betterproto.Message):
    reduce_ratio: float = betterproto.float_field(1)
    remaining_durability: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class AbilityAppliedModifier(betterproto.Message):
    modifier_local_id: int = betterproto.int32_field(1)
    parent_ability_entity_id: int = betterproto.uint32_field(2)
    parent_ability_name: "AbilityString" = betterproto.message_field(3)
    parent_ability_override: "AbilityString" = betterproto.message_field(4)
    instanced_ability_id: int = betterproto.uint32_field(5)
    instanced_modifier_id: int = betterproto.uint32_field(6)
    exist_duration: float = betterproto.float_field(7)
    attached_instanced_modifier: "AbilityAttachedModifier" = betterproto.message_field(
        8
    )
    apply_entity_id: int = betterproto.uint32_field(9)
    is_attached_parent_ability: bool = betterproto.bool_field(10)
    modifier_durability: "ModifierDurability" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class AbilitySyncStateInfo(betterproto.Message):
    is_inited: bool = betterproto.bool_field(1)
    dynamic_value_map: List["AbilityScalarValueEntry"] = betterproto.message_field(2)
    applied_abilities: List["AbilityAppliedAbility"] = betterproto.message_field(3)
    applied_modifiers: List["AbilityAppliedModifier"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class Vector(betterproto.Message):
    x: float = betterproto.float_field(1)
    y: float = betterproto.float_field(2)
    z: float = betterproto.float_field(3)


@dataclass(eq=False, repr=False)
class Vector3Int(betterproto.Message):
    x: int = betterproto.int32_field(1)
    y: int = betterproto.int32_field(2)
    z: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class MotionInfo(betterproto.Message):
    pos: "Vector" = betterproto.message_field(1)
    rot: "Vector" = betterproto.message_field(2)
    speed: "Vector" = betterproto.message_field(3)
    state: "MotionState" = betterproto.enum_field(4)
    params: List["Vector"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class PlaceInfo(betterproto.Message):
    pos: "Vector" = betterproto.message_field(1)
    rot: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SceneWeaponInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    gadget_id: int = betterproto.uint32_field(2)
    item_id: int = betterproto.uint32_field(3)
    guid: int = betterproto.uint64_field(4)
    level: int = betterproto.uint32_field(5)
    promote_level: int = betterproto.uint32_field(6)
    ability_info: "AbilitySyncStateInfo" = betterproto.message_field(7)
    affix_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class SceneReliquaryInfo(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    guid: int = betterproto.uint64_field(2)
    level: int = betterproto.uint32_field(3)
    promote_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SceneAvatarInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    avatar_id: int = betterproto.uint32_field(2)
    guid: int = betterproto.uint64_field(3)
    peer_id: int = betterproto.uint32_field(4)
    equip_id_list: List[int] = betterproto.uint32_field(5)
    skill_depot_id: int = betterproto.uint32_field(6)
    talent_id_list: List[int] = betterproto.uint32_field(7)
    weapon: "SceneWeaponInfo" = betterproto.message_field(8)
    reliquary_list: List["SceneReliquaryInfo"] = betterproto.message_field(9)
    buff_id_list: List[int] = betterproto.uint32_field(10)
    core_proud_skill_level: int = betterproto.uint32_field(11)
    inherent_proud_skill_list: List[int] = betterproto.uint32_field(12)
    skill_level_map: Dict[int, int] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    proud_skill_extra_level_map: Dict[int, int] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class SceneMonsterInfo(betterproto.Message):
    monster_id: int = betterproto.uint32_field(1)
    group_id: int = betterproto.uint32_field(2)
    config_id: int = betterproto.uint32_field(3)
    weapon_list: List["SceneWeaponInfo"] = betterproto.message_field(4)
    authority_peer_id: int = betterproto.uint32_field(5)
    affix_list: List[int] = betterproto.uint32_field(6)
    is_elite: bool = betterproto.bool_field(7)
    owner_entity_id: int = betterproto.uint32_field(8)
    summoned_tag: int = betterproto.uint32_field(9)
    summon_tag_map: Dict[int, int] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    pose_id: int = betterproto.uint32_field(11)
    born_type: "MonsterBornType" = betterproto.enum_field(12)
    block_id: int = betterproto.uint32_field(13)
    mark_flag: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class SceneNpcInfo(betterproto.Message):
    npc_id: int = betterproto.uint32_field(1)
    room_id: int = betterproto.uint32_field(2)
    parent_quest_id: int = betterproto.uint32_field(3)
    block_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class WorktopInfo(betterproto.Message):
    option_list: List[int] = betterproto.uint32_field(1)
    is_guest_can_operate: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class MathQuaternion(betterproto.Message):
    x: float = betterproto.float_field(1)
    y: float = betterproto.float_field(2)
    z: float = betterproto.float_field(3)
    w: float = betterproto.float_field(4)


@dataclass(eq=False, repr=False)
class PlatformInfo(betterproto.Message):
    route_id: int = betterproto.uint32_field(1)
    start_index: int = betterproto.int32_field(2)
    start_route_time: int = betterproto.uint32_field(3)
    start_scene_time: int = betterproto.uint32_field(4)
    temp_route_time: int = betterproto.uint32_field(5)
    temp_start_route_time: int = betterproto.uint32_field(6)
    start_pos: "Vector" = betterproto.message_field(7)
    is_started: bool = betterproto.bool_field(8)
    start_rot: "MathQuaternion" = betterproto.message_field(9)
    stop_scene_time: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class WeatherInfo(betterproto.Message):
    weather_area_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ClientGadgetInfo(betterproto.Message):
    camp_id: int = betterproto.uint32_field(1)
    camp_type: int = betterproto.uint32_field(2)
    guid: int = betterproto.uint64_field(3)
    owner_entity_id: int = betterproto.uint32_field(4)
    target_entity_id: int = betterproto.uint32_field(5)
    async_load: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class AbilityGadgetInfo(betterproto.Message):
    camp_id: int = betterproto.uint32_field(1)
    camp_target_type: int = betterproto.uint32_field(2)
    target_entity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GatherGadgetInfo(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    is_forbid_guest: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class StatueGadgetInfo(betterproto.Message):
    opened_statue_uid_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class BossChestInfo(betterproto.Message):
    monster_config_id: int = betterproto.uint32_field(1)
    world_resin: int = betterproto.uint32_field(2)
    remain_uid_list: List[int] = betterproto.uint32_field(3)
    qualify_uid_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SceneGadgetInfo(betterproto.Message):
    gadget_id: int = betterproto.uint32_field(1)
    group_id: int = betterproto.uint32_field(2)
    config_id: int = betterproto.uint32_field(3)
    owner_entity_id: int = betterproto.uint32_field(4)
    born_type: "GadgetBornType" = betterproto.enum_field(5)
    gadget_state: int = betterproto.uint32_field(6)
    gadget_type: int = betterproto.uint32_field(7)
    is_show_cutscene: bool = betterproto.bool_field(8)
    authority_peer_id: int = betterproto.uint32_field(9)
    is_enable_interact: bool = betterproto.bool_field(10)
    interact_id: int = betterproto.uint32_field(11)
    mark_flag: int = betterproto.uint32_field(21)
    trifle_item: "Item" = betterproto.message_field(12, group="content")
    gather_gadget: "GatherGadgetInfo" = betterproto.message_field(13, group="content")
    worktop: "WorktopInfo" = betterproto.message_field(14, group="content")
    client_gadget: "ClientGadgetInfo" = betterproto.message_field(15, group="content")
    platform: "PlatformInfo" = betterproto.message_field(16, group="content")
    weather: "WeatherInfo" = betterproto.message_field(17, group="content")
    ability_gadget: "AbilityGadgetInfo" = betterproto.message_field(18, group="content")
    statue_gadget: "StatueGadgetInfo" = betterproto.message_field(19, group="content")
    boss_chest: "BossChestInfo" = betterproto.message_field(20, group="content")


@dataclass(eq=False, repr=False)
class AnimatorParameterValueInfo(betterproto.Message):
    para_type: int = betterproto.uint32_field(1)
    int_val: int = betterproto.int32_field(2, group="paraVal")
    float_val: float = betterproto.float_field(3, group="paraVal")
    bool_val: bool = betterproto.bool_field(4, group="paraVal")


@dataclass(eq=False, repr=False)
class ServantInfo(betterproto.Message):
    master_entity_id: int = betterproto.uint32_field(1)
    born_slot_index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SceneEntityAiInfo(betterproto.Message):
    is_ai_open: bool = betterproto.bool_field(1)
    born_pos: "Vector" = betterproto.message_field(2)
    skill_cd_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    servant_info: "ServantInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class EntityRendererChangedInfo(betterproto.Message):
    changed_renderers: Dict[str, int] = betterproto.map_field(
        1, betterproto.TYPE_STRING, betterproto.TYPE_INT32
    )


@dataclass(eq=False, repr=False)
class SceneEntityInfo(betterproto.Message):
    entity_type: "ProtEntityType" = betterproto.enum_field(1)
    entity_id: int = betterproto.uint32_field(2)
    name: str = betterproto.string_field(3)
    motion_info: "MotionInfo" = betterproto.message_field(4)
    prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )
    life_state: int = betterproto.uint32_field(7)
    ability_info: "AbilitySyncStateInfo" = betterproto.message_field(8)
    animator_para_map: Dict[int, "AnimatorParameterValueInfo"] = betterproto.map_field(
        9, betterproto.TYPE_INT32, betterproto.TYPE_MESSAGE
    )
    renderer_changed_info: "EntityRendererChangedInfo" = betterproto.message_field(14)
    ai_info: "SceneEntityAiInfo" = betterproto.message_field(15)
    last_move_scene_time_ms: int = betterproto.uint32_field(17)
    last_move_reliable_seq: int = betterproto.uint32_field(18)
    avatar: "SceneAvatarInfo" = betterproto.message_field(10, group="entity")
    monster: "SceneMonsterInfo" = betterproto.message_field(11, group="entity")
    npc: "SceneNpcInfo" = betterproto.message_field(12, group="entity")
    gadget: "SceneGadgetInfo" = betterproto.message_field(13, group="entity")


@dataclass(eq=False, repr=False)
class CreateGadgetInfo(betterproto.Message):
    born_type: "GadgetBornType" = betterproto.enum_field(1)
    chest: "CreateGadgetInfoChest" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CreateGadgetInfoChest(betterproto.Message):
    chest_drop_id: int = betterproto.uint32_field(1)
    is_show_cutscene: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class CreateEntityInfo(betterproto.Message):
    level: int = betterproto.uint32_field(5)
    pos: "Vector" = betterproto.message_field(6)
    rot: "Vector" = betterproto.message_field(7)
    scene_id: int = betterproto.uint32_field(10)
    room_id: int = betterproto.uint32_field(11)
    client_unique_id: int = betterproto.uint32_field(12)
    monster_id: int = betterproto.uint32_field(1, group="entity")
    npc_id: int = betterproto.uint32_field(2, group="entity")
    gadget_id: int = betterproto.uint32_field(3, group="entity")
    item_id: int = betterproto.uint32_field(4, group="entity")
    gadget: "CreateGadgetInfo" = betterproto.message_field(
        13, group="entity_create_info"
    )


@dataclass(eq=False, repr=False)
class TrialAvatarGrantRecord(betterproto.Message):
    grant_reason: int = betterproto.uint32_field(1)
    from_parent_quest_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TrialAvatarInfo(betterproto.Message):
    trial_avatar_id: int = betterproto.uint32_field(1)
    trial_equip_list: List["Item"] = betterproto.message_field(2)
    grant_record: "TrialAvatarGrantRecord" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class AvatarSkillInfo(betterproto.Message):
    pass_cd_time: int = betterproto.uint32_field(1)
    full_cd_time_list: List[int] = betterproto.uint32_field(2)
    max_charge_count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AvatarFetterInfo(betterproto.Message):
    exp_number: int = betterproto.uint32_field(1)
    exp_level: int = betterproto.uint32_field(2)
    open_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AvatarExpeditionInfo(betterproto.Message):
    state: "AvatarExpeditionState" = betterproto.enum_field(1)
    exp_id: int = betterproto.uint32_field(2)
    hour_time: int = betterproto.uint32_field(3)
    start_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class AvatarInfo(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    guid: int = betterproto.uint64_field(2)
    prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    life_state: int = betterproto.uint32_field(4)
    equip_guid_list: List[int] = betterproto.uint64_field(5)
    talent_id_list: List[int] = betterproto.uint32_field(6)
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )
    trial_avatar_info: "TrialAvatarInfo" = betterproto.message_field(9)
    skill_map: Dict[int, "AvatarSkillInfo"] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    skill_depot_id: int = betterproto.uint32_field(11)
    fetter_info: "AvatarFetterInfo" = betterproto.message_field(12)
    core_proud_skill_level: int = betterproto.uint32_field(13)
    inherent_proud_skill_list: List[int] = betterproto.uint32_field(14)
    skill_level_map: Dict[int, int] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    expedition_state: "AvatarExpeditionState" = betterproto.enum_field(16)
    proud_skill_extra_level_map: Dict[int, int] = betterproto.map_field(
        17, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    is_focus: bool = betterproto.bool_field(18)
    avatar_type: int = betterproto.uint32_field(19)


@dataclass(eq=False, repr=False)
class Quest(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)
    state: int = betterproto.uint32_field(2)
    start_time: int = betterproto.uint32_field(4)
    is_random: bool = betterproto.bool_field(5)
    parent_quest_id: int = betterproto.uint32_field(6)
    quest_config_id: int = betterproto.uint32_field(7)
    start_game_time: int = betterproto.uint32_field(8)
    accept_time: int = betterproto.uint32_field(9)
    lacked_npc_list: List[int] = betterproto.uint32_field(10)
    finish_progress_list: List[int] = betterproto.uint32_field(11)
    fail_progress_list: List[int] = betterproto.uint32_field(12)
    lacked_npc_map: Dict[int, int] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class NpcPositionInfo(betterproto.Message):
    npc_id: int = betterproto.uint32_field(1)
    pos: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MailTextContent(betterproto.Message):
    title: str = betterproto.string_field(1)
    content: str = betterproto.string_field(2)
    sender: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class MailItem(betterproto.Message):
    equip_param: "EquipParam" = betterproto.message_field(1)
    delete_info: "MaterialDeleteInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MailData(betterproto.Message):
    mail_id: int = betterproto.uint32_field(1)
    mail_text_content: "MailTextContent" = betterproto.message_field(4)
    item_list: List["MailItem"] = betterproto.message_field(7)
    send_time: int = betterproto.uint32_field(8)
    expire_time: int = betterproto.uint32_field(9)
    importance: int = betterproto.uint32_field(10)
    is_read: bool = betterproto.bool_field(11)
    is_attachment_got: bool = betterproto.bool_field(12)
    config_id: int = betterproto.uint32_field(13)
    argument_list: List[str] = betterproto.string_field(14)


@dataclass(eq=False, repr=False)
class OnlinePlayerInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    player_level: int = betterproto.uint32_field(3)
    avatar_id: int = betterproto.uint32_field(4)
    mp_setting_type: "MpSettingType" = betterproto.enum_field(5)
    cur_player_num_in_world: int = betterproto.uint32_field(6)
    world_level: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MapMarkPoint(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    pos: "Vector" = betterproto.message_field(3)
    point_type: "MapMarkPointType" = betterproto.enum_field(4)
    monster_id: int = betterproto.uint32_field(5)
    from_type: "MapMarkFromType" = betterproto.enum_field(6)
    quest_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MassiveWaterInfo(betterproto.Message):
    id: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class MassiveGrassInfo(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    center: "Vector" = betterproto.message_field(2)
    size: "Vector" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class MassiveBoxInfo(betterproto.Message):
    id: int = betterproto.int32_field(1)
    config_id: int = betterproto.uint32_field(2)
    center: "Vector" = betterproto.message_field(3)
    extents: "Vector" = betterproto.message_field(4)
    up: "Vector" = betterproto.message_field(5)
    forward: "Vector" = betterproto.message_field(6)
    right: "Vector" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class ClientMassiveEntity(betterproto.Message):
    entity_type: int = betterproto.uint32_field(1)
    config_id: int = betterproto.uint32_field(2)
    obj_id: int = betterproto.int64_field(3)
    water_info: "MassiveWaterInfo" = betterproto.message_field(4, group="entity_info")
    grass_info: "MassiveGrassInfo" = betterproto.message_field(5, group="entity_info")
    box_info: "MassiveBoxInfo" = betterproto.message_field(6, group="entity_info")


@dataclass(eq=False, repr=False)
class ServerMassiveEntity(betterproto.Message):
    entity_type: int = betterproto.uint32_field(1)
    config_id: int = betterproto.uint32_field(2)
    runtime_id: int = betterproto.uint32_field(3)
    authority_peer_id: int = betterproto.uint32_field(4)
    obj_id: int = betterproto.int64_field(5)
    water_info: "MassiveWaterInfo" = betterproto.message_field(6, group="entity_info")
    grass_info: "MassiveGrassInfo" = betterproto.message_field(7, group="entity_info")
    box_info: "MassiveBoxInfo" = betterproto.message_field(8, group="entity_info")


@dataclass(eq=False, repr=False)
class MassiveEntityState(betterproto.Message):
    entity_type: int = betterproto.uint32_field(1)
    obj_id: int = betterproto.int64_field(2)
    element_state: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class HitCollision(betterproto.Message):
    hit_collider_type: "HitColliderType" = betterproto.enum_field(1)
    hit_box_index: int = betterproto.int32_field(2)
    hit_point: "Vector" = betterproto.message_field(3)
    hit_dir: "Vector" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class AttackHitEffectResult(betterproto.Message):
    hit_eff_level: int = betterproto.uint32_field(1)
    retreat_strength: float = betterproto.float_field(2)
    air_strength: float = betterproto.float_field(3)
    hit_halt_time: float = betterproto.float_field(4)
    hit_halt_time_scale: float = betterproto.float_field(5)


@dataclass(eq=False, repr=False)
class AbilityIdentifier(betterproto.Message):
    instanced_ability_id: int = betterproto.uint32_field(1)
    ability_caster_id: int = betterproto.uint32_field(2)
    local_id: int = betterproto.int32_field(3)
    instanced_modifier_id: int = betterproto.uint32_field(4)
    modifier_owner_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class AttackResult(betterproto.Message):
    attacker_id: int = betterproto.uint32_field(1)
    defense_id: int = betterproto.uint32_field(2)
    anim_event_id: str = betterproto.string_field(3)
    ability_identifier: "AbilityIdentifier" = betterproto.message_field(4)
    attack_tag: str = betterproto.string_field(5)
    damage: float = betterproto.float_field(6)
    is_crit: bool = betterproto.bool_field(7)
    hit_collision: "HitCollision" = betterproto.message_field(8)
    hit_pos_type: int = betterproto.uint32_field(9)
    endure_break: int = betterproto.uint32_field(10)
    resolved_dir: "Vector" = betterproto.message_field(11)
    hit_retreat_angle_compat: int = betterproto.int32_field(12)
    hit_eff_result: "AttackHitEffectResult" = betterproto.message_field(13)
    element_type: int = betterproto.uint32_field(14)
    damage_percentage: float = betterproto.float_field(15)
    damage_extra: float = betterproto.float_field(16)
    bonus_critical: float = betterproto.float_field(17)
    bonus_critical_hurt: float = betterproto.float_field(18)
    use_gadget_damage_action: bool = betterproto.bool_field(19)
    gadget_damage_action_idx: int = betterproto.uint32_field(20)
    strike_type: int = betterproto.uint32_field(21)
    is_resist_text: bool = betterproto.bool_field(22)
    critical_rand: float = betterproto.float_field(23)
    element_amplify_rate: float = betterproto.float_field(24)
    attenuation_tag: str = betterproto.string_field(25)
    damage_shield: float = betterproto.float_field(26)
    mute_element_hurt: bool = betterproto.bool_field(27)


@dataclass(eq=False, repr=False)
class EvtBeingHitInfo(betterproto.Message):
    peer_id: int = betterproto.uint32_field(1)
    attack_result: "AttackResult" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class EvtBeingHitNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    being_hit_info: "EvtBeingHitInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class EvtAnimatorParameterInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    name_id: int = betterproto.int32_field(2)
    is_server_cache: bool = betterproto.bool_field(3)
    value: "AnimatorParameterValueInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class EvtAnimatorParameterNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    animator_param_info: "EvtAnimatorParameterInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AbilityArgument(betterproto.Message):
    int_arg: int = betterproto.uint32_field(1, group="arg")
    float_arg: float = betterproto.float_field(2, group="arg")
    str_arg: str = betterproto.string_field(3, group="arg")


@dataclass(eq=False, repr=False)
class HostPlayerNotify(betterproto.Message):
    host_uid: int = betterproto.uint32_field(1)
    host_peer_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EvtDoSkillSuccNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    caster_id: int = betterproto.uint32_field(2)
    skill_id: int = betterproto.uint32_field(3)
    forward: "Vector" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class EvtCreateGadgetNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    entity_id: int = betterproto.uint32_field(2)
    config_id: int = betterproto.uint32_field(3)
    camp_id: int = betterproto.uint32_field(4)
    camp_type: int = betterproto.uint32_field(5)
    init_pos: "Vector" = betterproto.message_field(6)
    init_euler_angles: "Vector" = betterproto.message_field(7)
    guid: int = betterproto.uint64_field(8)
    owner_entity_id: int = betterproto.uint32_field(9)
    target_entity_id: int = betterproto.uint32_field(10)
    is_async_load: bool = betterproto.bool_field(11)
    target_lock_point_index: int = betterproto.uint32_field(12)
    room_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class EvtDestroyGadgetNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    entity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EvtFaceToEntityNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    entity_id: int = betterproto.uint32_field(2)
    face_entity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EvtFaceToDirInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    face_dir: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class EvtFaceToDirNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    evt_face_to_dir_info: "EvtFaceToDirInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class EvtCostStaminaNotify(betterproto.Message):
    cost_stamina: float = betterproto.float_field(1)
    skill_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EvtSetAttackTargetInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    attack_target_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EvtSetAttackTargetNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    evt_set_attack_target_info: "EvtSetAttackTargetInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class EvtAnimatorStateChangedInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    to_state_hash: int = betterproto.uint32_field(2)
    normalized_time_compact: int = betterproto.uint32_field(3)
    face_angle_compact: int = betterproto.int32_field(4)
    pos: "Vector" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class EvtAnimatorStateChangedNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    evt_animator_state_changed_info: "EvtAnimatorStateChangedInfo" = (
        betterproto.message_field(2)
    )


@dataclass(eq=False, repr=False)
class EvtRushMoveInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    velocity: "Vector" = betterproto.message_field(2)
    time_range: float = betterproto.float_field(3)
    state_name_hash: int = betterproto.int32_field(4)
    face_angle_compact: int = betterproto.int32_field(5)
    pos: "Vector" = betterproto.message_field(6)
    rush_attack_target_pos: "Vector" = betterproto.message_field(7)
    rush_to_pos: "Vector" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class EvtRushMoveNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    evt_rush_move_info: "EvtRushMoveInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class EvtBulletHitNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    forward_peer: int = betterproto.uint32_field(2)
    entity_id: int = betterproto.uint32_field(3)
    hit_entity_id: int = betterproto.uint32_field(4)
    hit_collider_type: "HitColliderType" = betterproto.enum_field(5)
    hit_box_index: int = betterproto.int32_field(6)
    hit_point: "Vector" = betterproto.message_field(7)
    hit_normal: "Vector" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class EvtBulletDeactiveNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    entity_id: int = betterproto.uint32_field(2)
    disappear_pos: "Vector" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class EvtEntityStartDieEndNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    entity_id: int = betterproto.uint32_field(2)
    immediately: bool = betterproto.bool_field(3)
    die_state_flag: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class EvtBulletMoveNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    entity_id: int = betterproto.uint32_field(2)
    cur_pos: "Vector" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class EvtAvatarEnterFocusNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    entity_id: int = betterproto.uint32_field(2)
    fast_focus: bool = betterproto.bool_field(3)
    use_focus_sticky: bool = betterproto.bool_field(4)
    use_auto_focus: bool = betterproto.bool_field(5)
    use_gyro: bool = betterproto.bool_field(6)
    can_move: bool = betterproto.bool_field(7)
    show_cross_hair: bool = betterproto.bool_field(8)
    focus_forward: "Vector" = betterproto.message_field(9)
    enter_normal_focus_shoot: bool = betterproto.bool_field(10)
    enter_holding_focus_shoot: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class EvtAvatarExitFocusNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    entity_id: int = betterproto.uint32_field(2)
    finish_forward: "Vector" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class EvtAvatarUpdateFocusNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    entity_id: int = betterproto.uint32_field(2)
    focus_forward: "Vector" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class EntityAuthorityChangeNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    authority_peer_id: int = betterproto.uint32_field(2)
    ability_info: "AbilitySyncStateInfo" = betterproto.message_field(3)
    renderer_changed_info: "EntityRendererChangedInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class AvatarBuffAddNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    buff_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AvatarBuffDelNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    buff_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MonsterAlertChangeNotify(betterproto.Message):
    avatar_entity_id: int = betterproto.uint32_field(2)
    is_alert: int = betterproto.uint32_field(3)
    monster_entity_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MonsterForceAlertNotify(betterproto.Message):
    monster_entity_id: int = betterproto.uint32_field(1)
    is_alert: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class MonsterForceAiNotify(betterproto.Message):
    monster_entity_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class AvatarEnterElementViewNotify(betterproto.Message):
    avatar_entity_id: int = betterproto.uint32_field(1)
    is_triggerd: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class TriggerCreateGadgetToEquipPartNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    gadget_entity_id: int = betterproto.uint32_field(2)
    gadget_id: int = betterproto.uint32_field(3)
    equip_part: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class EvtEntityRenderersChangedNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    entity_id: int = betterproto.uint32_field(2)
    is_server_cache: bool = betterproto.bool_field(3)
    renderer_changed_info: "EntityRendererChangedInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class AnimatorForceSetAirMoveNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    entity_id: int = betterproto.uint32_field(2)
    in_air_move: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class AiSkillCdInfo(betterproto.Message):
    skill_cd_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class EvtAiSyncSkillCdNotify(betterproto.Message):
    ai_cd_map: Dict[int, "AiSkillCdInfo"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class EvtBeingHitsCombineNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    evt_being_hit_info_list: List["EvtBeingHitInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class EvtAvatarSitDownNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    position: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class EvtAvatarStandUpNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    direction: int = betterproto.int32_field(2)
    perform_id: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class CreateMassiveEntityReq(betterproto.Message):
    massive_entity_list: List["ClientMassiveEntity"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CreateMassiveEntityRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class CreateMassiveEntityNotify(betterproto.Message):
    massive_entity_list: List["ServerMassiveEntity"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class DestroyMassiveEntityNotify(betterproto.Message):
    massive_entity_list: List["ClientMassiveEntity"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MassiveEntityStateChangedNotify(betterproto.Message):
    massive_entity_state_list: List["MassiveEntityState"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class TeamEntityInfo(betterproto.Message):
    team_entity_id: int = betterproto.uint32_field(1)
    authority_peer_id: int = betterproto.uint32_field(2)
    team_ability_info: "AbilitySyncStateInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SyncTeamEntityNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    team_entity_info_list: List["TeamEntityInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class DelTeamEntityNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    del_entity_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CombatInvokeEntry(betterproto.Message):
    argument_type: "CombatTypeArgument" = betterproto.enum_field(1)
    forward_type: "ForwardType" = betterproto.enum_field(2)
    combat_data: bytes = betterproto.bytes_field(3)


@dataclass(eq=False, repr=False)
class CombatInvocationsNotify(betterproto.Message):
    invoke_list: List["CombatInvokeEntry"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AbilityInvokeEntryHead(betterproto.Message):
    instanced_ability_id: int = betterproto.uint32_field(1)
    instanced_modifier_id: int = betterproto.uint32_field(2)
    local_id: int = betterproto.int32_field(3)
    modifier_config_local_id: int = betterproto.int32_field(4)
    target_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class AbilityInvokeEntry(betterproto.Message):
    head: "AbilityInvokeEntryHead" = betterproto.message_field(1)
    argument_type: "AbilityInvokeArgument" = betterproto.enum_field(2)
    ability_data: bytes = betterproto.bytes_field(3)
    entity_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class AbilityInvocationFixedNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    forward_peer: int = betterproto.uint32_field(2)
    forward_peers: List[int] = betterproto.uint32_field(3)
    invoke1_st: "AbilityInvokeEntry" = betterproto.message_field(4)
    invoke2_nd: "AbilityInvokeEntry" = betterproto.message_field(5)
    invoke3_rd: "AbilityInvokeEntry" = betterproto.message_field(6)
    invoke4_th: "AbilityInvokeEntry" = betterproto.message_field(7)
    invoke5_th: "AbilityInvokeEntry" = betterproto.message_field(8)
    invoke6_th: "AbilityInvokeEntry" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class AbilityInvocationsNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    forward_peer: int = betterproto.uint32_field(2)
    forward_peers: List[int] = betterproto.uint32_field(3)
    invokes: List["AbilityInvokeEntry"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class AbilityMetaReInitOverrideMap(betterproto.Message):
    override_map: List["AbilityScalarValueEntry"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AbilityMetaAddAbility(betterproto.Message):
    ability: "AbilityAppliedAbility" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ModifierProperty(betterproto.Message):
    key: "AbilityString" = betterproto.message_field(1)
    value: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class AbilityMetaModifierChange(betterproto.Message):
    action: "ModifierAction" = betterproto.enum_field(1)
    parent_ability_name: "AbilityString" = betterproto.message_field(2)
    parent_ability_override: "AbilityString" = betterproto.message_field(3)
    attached_instanced_modifier: "AbilityAttachedModifier" = betterproto.message_field(
        4
    )
    properties: List["ModifierProperty"] = betterproto.message_field(5)
    modifier_local_id: int = betterproto.int32_field(6)
    is_mute_remote: bool = betterproto.bool_field(7)
    apply_entity_id: int = betterproto.uint32_field(8)
    is_attached_parent_ability: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class AbilityMetaSpecialFloatArgument(betterproto.Message):
    argument_value: float = betterproto.float_field(1)
    is_on: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class AbilityMetaAddOrGetAbilityAndTrigger(betterproto.Message):
    ability_name: "AbilityString" = betterproto.message_field(1)
    ability_override: "AbilityString" = betterproto.message_field(2)
    trigger_argument: float = betterproto.float_field(3)


@dataclass(eq=False, repr=False)
class AbilityMetaSetKilledState(betterproto.Message):
    killed: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class AbilityMetaSetAbilityTrigger(betterproto.Message):
    trigger_ability_entity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AbilityMetaSetModifierApplyEntityId(betterproto.Message):
    apply_entity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AbilityMetaModifierDurabilityChange(betterproto.Message):
    reduce_durability: float = betterproto.float_field(1)
    remain_durability: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class AbilityActionTriggerAbility(betterproto.Message):
    other_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AbilityActionSetCrashDamage(betterproto.Message):
    damage: float = betterproto.float_field(1)
    hit_pos: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AbilityBornType(betterproto.Message):
    pos: "Vector" = betterproto.message_field(1)
    rot: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AbilityActionSummon(betterproto.Message):
    pos: "Vector" = betterproto.message_field(1)
    rot: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AbilityActionBlink(betterproto.Message):
    pos: "Vector" = betterproto.message_field(1)
    rot: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AbilityActionCreateGadget(betterproto.Message):
    pos: "Vector" = betterproto.message_field(1)
    rot: "Vector" = betterproto.message_field(2)
    room_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AbilityApplyLevelModifier(betterproto.Message):
    apply_entity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AbilityActionGenerateElemBall(betterproto.Message):
    pos: "Vector" = betterproto.message_field(1)
    rot: "Vector" = betterproto.message_field(2)
    room_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AbilityMixinEmpty(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class AbilityMixinAvatarSteerByCamera(betterproto.Message):
    target_pos: "Vector" = betterproto.message_field(1)
    target_dir: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AbilityMixinWindZone(betterproto.Message):
    entity_ids: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AbilityMixinCostStamina(betterproto.Message):
    is_swim: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class AbilityMixinEliteShield(betterproto.Message):
    sub_shield: float = betterproto.float_field(1)


@dataclass(eq=False, repr=False)
class AbilityMixinElementShield(betterproto.Message):
    sub_shield: float = betterproto.float_field(1)
    is_shield_broken: bool = betterproto.bool_field(2)
    shield: float = betterproto.float_field(3)
    max_shield: float = betterproto.float_field(4)
    absorb_type: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class AbilityMixinGlobalShield(betterproto.Message):
    sub_shield: float = betterproto.float_field(1)
    avatar_id: int = betterproto.uint32_field(2)
    shield_effect_name: str = betterproto.string_field(3)
    height_offset: float = betterproto.float_field(4)


@dataclass(eq=False, repr=False)
class AbilityMixinShieldBar(betterproto.Message):
    element_type: int = betterproto.uint32_field(1)
    shield: float = betterproto.float_field(2)
    max_shield: float = betterproto.float_field(3)


@dataclass(eq=False, repr=False)
class AbilityMixinWindSeedSpawner(betterproto.Message):
    add_signal: "AbilityMixinWindSeedSpawnerAddSignal" = betterproto.message_field(
        1, group="cmd"
    )
    refresh_seed: "AbilityMixinWindSeedSpawnerRefreshSeed" = betterproto.message_field(
        2, group="cmd"
    )
    catch_seed: "AbilityMixinWindSeedSpawnerCatchSeed" = betterproto.message_field(
        3, group="cmd"
    )


@dataclass(eq=False, repr=False)
class AbilityMixinWindSeedSpawnerAddSignal(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class AbilityMixinWindSeedSpawnerRefreshSeed(betterproto.Message):
    pos_list: List["Vector"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AbilityMixinWindSeedSpawnerCatchSeed(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ClientAbilityInitBeginNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ClientAbilityInitFinishNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    invokes: List["AbilityInvokeEntry"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AbilityInvocationFailNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    invoke: "AbilityInvokeEntry" = betterproto.message_field(2)
    reason: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class AbilityResetReason(betterproto.Message):
    reason_type: "AbilityResetReasonType" = betterproto.enum_field(1)
    param: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AvatarAbilityResetNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    reset_reason: "AbilityResetReason" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class EntityAbilityInvokeEntry(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    invokes: List["AbilityInvokeEntry"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ClientAbilitiesInitFinishCombineNotify(betterproto.Message):
    entity_invoke_list: List["EntityAbilityInvokeEntry"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ElementReactionLog(betterproto.Message):
    source_id: int = betterproto.uint32_field(1)
    target_id: int = betterproto.uint32_field(2)
    ability_name: str = betterproto.string_field(3)
    modifier_name: str = betterproto.string_field(4)
    anim_event_id: str = betterproto.string_field(5)
    attack_tag: str = betterproto.string_field(6)
    reaction_type: int = betterproto.uint32_field(7)
    count: int = betterproto.uint32_field(8)
    source_lv: int = betterproto.uint32_field(9)
    target_lv: int = betterproto.uint32_field(10)
    pos: "Vector" = betterproto.message_field(11)
    time: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ElementReactionLogNotify(betterproto.Message):
    log_list: List["ElementReactionLog"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AvatarAbilityResetFinishNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    reset_reason: "AbilityResetReason" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WindSeedClientNotify(betterproto.Message):
    refresh_notify: "WindSeedClientNotifyRefreshNotify" = betterproto.message_field(
        1, group="notify"
    )
    add_wind_bullet_notify: "WindSeedClientNotifyAddWindBulletNotify" = (
        betterproto.message_field(2, group="notify")
    )


@dataclass(eq=False, repr=False)
class WindSeedClientNotifyRefreshNotify(betterproto.Message):
    refresh_num: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class WindSeedClientNotifyAddWindBulletNotify(betterproto.Message):
    seed_entity_id: int = betterproto.uint32_field(1)
    seed_pos: "Vector" = betterproto.message_field(2)
    catch_player_uid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetActivityScheduleReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ActivityScheduleInfo(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    schedule_id: int = betterproto.uint32_field(3)
    begin_time: int = betterproto.uint32_field(4)
    end_time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GetActivityScheduleRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    activity_schedule_list: List["ActivityScheduleInfo"] = betterproto.message_field(2)
    remain_fly_sea_lamp_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetActivityInfoReq(betterproto.Message):
    activity_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ActivityInfo(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    begin_time: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(4)
    activity_type: int = betterproto.uint32_field(5)
    is_play_open_anim: bool = betterproto.bool_field(6)
    is_finished: bool = betterproto.bool_field(7)
    is_starting: bool = betterproto.bool_field(8)
    sam_lamp_info: "SeaLampActivityDetailInfo" = betterproto.message_field(
        11, group="detail"
    )


@dataclass(eq=False, repr=False)
class GetActivityInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    activity_info_list: List["ActivityInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ActivityPlayOpenAnimNotify(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ActivityInfoNotify(betterproto.Message):
    activity_info: "ActivityInfo" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ActivityScheduleInfoNotify(betterproto.Message):
    activity_schedule_list: List["ActivityScheduleInfo"] = betterproto.message_field(1)
    remain_fly_sea_lamp_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SeaLampActivityDetailInfo(betterproto.Message):
    phase_id: int = betterproto.uint32_field(1)
    progress: int = betterproto.uint32_field(2)
    days: int = betterproto.uint32_field(3)
    contribution: int = betterproto.uint32_field(4)
    taken_contribution_reward_list: List[int] = betterproto.uint32_field(5)
    taken_phase_reward_list: List[int] = betterproto.uint32_field(6)
    factor: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class SeaLampFlyLampReq(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    wish_text: str = betterproto.string_field(2)
    item_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SeaLampFlyLampRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    total_contribution: int = betterproto.uint32_field(2)
    remain_fly_num: int = betterproto.uint32_field(3)
    add_contribution: int = betterproto.uint32_field(4)
    add_progress: int = betterproto.uint32_field(5)
    item_num: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class SeaLampTakeContributionRewardReq(betterproto.Message):
    config_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SeaLampTakeContributionRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    config_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SeaLampTakePhaseRewardReq(betterproto.Message):
    phase_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SeaLampTakePhaseRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    phase_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SeaLampContributeItemReq(betterproto.Message):
    item_list: List["ItemParam"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SeaLampContributeItemRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    total_contribution: int = betterproto.uint32_field(2)
    add_contribution: int = betterproto.uint32_field(3)
    add_progress: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class AnnounceData(betterproto.Message):
    config_id: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(3)
    center_system_text: str = betterproto.string_field(4)
    count_down_text: str = betterproto.string_field(5)
    dungeon_confirm_text: str = betterproto.string_field(6)
    center_system_frequency: int = betterproto.uint32_field(7)
    count_down_frequency: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ServerAnnounceNotify(betterproto.Message):
    announce_data_list: List["AnnounceData"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ServerAnnounceRevokeNotify(betterproto.Message):
    config_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class LoadActivityTerrainNotify(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AvatarAddNotify(betterproto.Message):
    avatar: "AvatarInfo" = betterproto.message_field(1)
    is_in_team: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class AvatarDelNotify(betterproto.Message):
    avatar_guid_list: List[int] = betterproto.uint64_field(1)


@dataclass(eq=False, repr=False)
class AvatarTeam(betterproto.Message):
    avatar_guid_list: List[int] = betterproto.uint64_field(1)
    team_name: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class SetUpAvatarTeamReq(betterproto.Message):
    team_id: int = betterproto.uint32_field(1)
    avatar_team_guid_list: List[int] = betterproto.uint64_field(2)
    cur_avatar_guid: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class SetUpAvatarTeamRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    team_id: int = betterproto.uint32_field(2)
    avatar_team_guid_list: List[int] = betterproto.uint64_field(3)
    cur_avatar_guid: int = betterproto.uint64_field(4)


@dataclass(eq=False, repr=False)
class ChooseCurAvatarTeamReq(betterproto.Message):
    team_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChooseCurAvatarTeamRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    cur_team_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChangeAvatarReq(betterproto.Message):
    guid: int = betterproto.uint64_field(1)
    skill_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChangeAvatarRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    cur_guid: int = betterproto.uint64_field(2)
    skill_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AvatarPromoteReq(betterproto.Message):
    guid: int = betterproto.uint64_field(1)


@dataclass(eq=False, repr=False)
class AvatarPromoteRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    guid: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class SpringUseReq(betterproto.Message):
    guid: int = betterproto.uint64_field(1)


@dataclass(eq=False, repr=False)
class SpringUseRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    guid: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class RefreshBackgroundAvatarReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class RefreshBackgroundAvatarRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    hp_full_time_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT64, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class AvatarTeamUpdateNotify(betterproto.Message):
    avatar_team_map: Dict[int, "AvatarTeam"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    temp_avatar_guid_list: List[int] = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class AvatarDataNotify(betterproto.Message):
    avatar_list: List["AvatarInfo"] = betterproto.message_field(1)
    avatar_team_map: Dict[int, "AvatarTeam"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    cur_avatar_team_id: int = betterproto.uint32_field(3)
    choose_avatar_guid: int = betterproto.uint64_field(4)
    temp_avatar_guid_list: List[int] = betterproto.uint64_field(5)


@dataclass(eq=False, repr=False)
class AvatarUpgradeReq(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(2)
    avatar_guid: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class AvatarUpgradeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    avatar_guid: int = betterproto.uint64_field(2)
    old_level: int = betterproto.uint32_field(3)
    cur_level: int = betterproto.uint32_field(4)
    old_fight_prop_map: Dict[int, float] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )
    cur_fight_prop_map: Dict[int, float] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )


@dataclass(eq=False, repr=False)
class AvatarDieAnimationEndReq(betterproto.Message):
    die_guid: int = betterproto.uint64_field(1)
    skill_id: int = betterproto.uint32_field(2)
    reborn_pos: "Vector" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class AvatarDieAnimationEndRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    die_guid: int = betterproto.uint64_field(2)
    skill_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AvatarChangeElementTypeReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    area_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AvatarChangeElementTypeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class AvatarFetterDataNotify(betterproto.Message):
    fetter_info_map: Dict[int, "AvatarFetterInfo"] = betterproto.map_field(
        1, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class AvatarExpeditionDataNotify(betterproto.Message):
    expedition_info_map: Dict[int, "AvatarExpeditionInfo"] = betterproto.map_field(
        1, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class AvatarExpeditionAllDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class AvatarExpeditionAllDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    expedition_info_map: Dict[int, "AvatarExpeditionInfo"] = betterproto.map_field(
        2, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )
    open_expedition_list: List[int] = betterproto.uint32_field(3)
    expedition_count_limit: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class AvatarExpeditionStartReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    exp_id: int = betterproto.uint32_field(2)
    hour_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AvatarExpeditionStartRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    expedition_info_map: Dict[int, "AvatarExpeditionInfo"] = betterproto.map_field(
        2, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class AvatarExpeditionCallBackReq(betterproto.Message):
    avatar_guid: List[int] = betterproto.uint64_field(1)


@dataclass(eq=False, repr=False)
class AvatarExpeditionCallBackRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    expedition_info_map: Dict[int, "AvatarExpeditionInfo"] = betterproto.map_field(
        2, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class AvatarExpeditionGetRewardReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)


@dataclass(eq=False, repr=False)
class AvatarExpeditionGetRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    expedition_info_map: Dict[int, "AvatarExpeditionInfo"] = betterproto.map_field(
        2, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class ChangeMpTeamAvatarReq(betterproto.Message):
    avatar_guid_list: List[int] = betterproto.uint64_field(1)
    cur_avatar_guid: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class ChangeMpTeamAvatarRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    avatar_guid_list: List[int] = betterproto.uint64_field(2)
    cur_avatar_guid: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class ChangeTeamNameReq(betterproto.Message):
    team_id: int = betterproto.int32_field(1)
    team_name: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class ChangeTeamNameRsp(betterproto.Message):
    team_id: int = betterproto.int32_field(1)
    team_name: str = betterproto.string_field(2)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class SceneTeamAvatar(betterproto.Message):
    player_uid: int = betterproto.uint32_field(1)
    avatar_guid: int = betterproto.uint64_field(2)
    scene_id: int = betterproto.uint32_field(3)
    entity_id: int = betterproto.uint32_field(4)
    avatar_info: "AvatarInfo" = betterproto.message_field(5)
    scene_avatar_info: "SceneAvatarInfo" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class SceneTeamUpdateNotify(betterproto.Message):
    scene_team_avatar_list: List["SceneTeamAvatar"] = betterproto.message_field(1)
    display_cur_avatar_list: List["MpDisplayCurAvatar"] = betterproto.message_field(2)
    is_in_mp: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class MpDisplayCurAvatar(betterproto.Message):
    player_uid: int = betterproto.uint32_field(1)
    avatar_guid: int = betterproto.uint64_field(2)
    life_state: int = betterproto.uint32_field(3)
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )


@dataclass(eq=False, repr=False)
class SceneTeamMpDisplayCurAvatarNotify(betterproto.Message):
    display_cur_avatar: "MpDisplayCurAvatar" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class FocusAvatarReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    is_focus: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class FocusAvatarRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    is_focus: bool = betterproto.bool_field(2)
    avatar_guid: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class DungeonEntryInfoReq(betterproto.Message):
    point_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DungeonEntryInfo(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(1)
    is_passed: bool = betterproto.bool_field(2)
    left_times: int = betterproto.uint32_field(3)
    start_time: int = betterproto.uint32_field(4)
    end_time: int = betterproto.uint32_field(5)
    max_boss_chest_num: int = betterproto.uint32_field(6)
    boss_chest_num: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class DungeonEntryInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    point_id: int = betterproto.uint32_field(2)
    dungeon_entry_list: List["DungeonEntryInfo"] = betterproto.message_field(3)
    recommend_dungeon_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PlayerEnterDungeonReq(betterproto.Message):
    point_id: int = betterproto.uint32_field(1)
    dungeon_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerEnterDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    point_id: int = betterproto.uint32_field(2)
    dungeon_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerQuitDungeonReq(betterproto.Message):
    point_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PlayerQuitDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    point_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DungeonWayPointNotify(betterproto.Message):
    active_way_point_list: List[int] = betterproto.uint32_field(1)
    is_add: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class DungeonWayPointActivateReq(betterproto.Message):
    way_point_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DungeonWayPointActivateRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    way_point_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DungeonSettleNotify(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(1)
    is_success: bool = betterproto.bool_field(2)
    fail_cond_list: List[int] = betterproto.uint32_field(3)
    settle_show: Dict[int, "ParamList"] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    close_time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class DungeonPlayerDieNotify(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(1)
    die_type: "PlayerDieType" = betterproto.enum_field(2)
    revive_count: int = betterproto.uint32_field(3)
    wait_time: int = betterproto.uint32_field(4)
    murderer_entity_id: int = betterproto.uint32_field(5)
    monster_id: int = betterproto.uint32_field(6, group="entity")
    gadget_id: int = betterproto.uint32_field(7, group="entity")


@dataclass(eq=False, repr=False)
class DungeonDieOptionReq(betterproto.Message):
    die_option: "PlayerDieOption" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class DungeonDieOptionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    die_option: "PlayerDieOption" = betterproto.enum_field(2)
    revive_count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DungeonShowReminderNotify(betterproto.Message):
    reminder_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DungeonPlayerDieReq(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(1)
    die_type: "PlayerDieType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class DungeonPlayerDieRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class DungeonDataNotify(betterproto.Message):
    dungeon_data_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class DungeonChallengeBeginNotify(betterproto.Message):
    challenge_id: int = betterproto.uint32_field(1)
    challenge_index: int = betterproto.uint32_field(2)
    param_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DungeonChallengeFinishNotify(betterproto.Message):
    challenge_index: int = betterproto.uint32_field(1)
    is_success: bool = betterproto.bool_field(2)
    is_new_record: bool = betterproto.bool_field(3)
    challenge_record_type: int = betterproto.uint32_field(4)
    current_value: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ChallengeDataNotify(betterproto.Message):
    challenge_index: int = betterproto.uint32_field(1)
    param_index: int = betterproto.uint32_field(2)
    value: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DungeonFollowNotify(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DungeonGetStatueDropReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class DungeonGetStatueDropRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class ChallengeRecord(betterproto.Message):
    challenge_index: int = betterproto.uint32_field(1)
    challenge_id: int = betterproto.uint32_field(2)
    challenge_record_type: int = betterproto.uint32_field(3)
    best_value: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ChallengeRecordNotify(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    challenge_record_list: List["ChallengeRecord"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamAvatar(betterproto.Message):
    player_uid: int = betterproto.uint32_field(1)
    avatar_info: "AvatarInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamInfoNotify(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(1)
    avatar_list: List["DungeonCandidateTeamAvatar"] = betterproto.message_field(2)
    ready_player_uid: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamInviteNotify(betterproto.Message):
    player_uid: int = betterproto.uint32_field(1)
    dungeon_id: int = betterproto.uint32_field(2)
    vaild_deadline_time_sec: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamRefuseNotify(betterproto.Message):
    player_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamPlayerLeaveNotify(betterproto.Message):
    player_uid: int = betterproto.uint32_field(1)
    reason: "DungeonCandidateTeamPlayerLeaveReason" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamDismissNotify(betterproto.Message):
    player_uid: int = betterproto.uint32_field(1)
    reason: "DungeonCandidateTeamDismissReason" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamCreateReq(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(1)
    point_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamCreateRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamInviteReq(betterproto.Message):
    player_uids: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamInviteRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamKickReq(betterproto.Message):
    player_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamKickRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamLeaveReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamLeaveRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamReplyInviteReq(betterproto.Message):
    is_accept: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamReplyInviteRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    is_trans_point: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamSetReadyReq(betterproto.Message):
    is_ready: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamSetReadyRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamChangeAvatarReq(betterproto.Message):
    avatar_guid_list: List[int] = betterproto.uint64_field(1)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamChangeAvatarRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class DailyDungeonEntryInfo(betterproto.Message):
    dungeon_entry_id: int = betterproto.uint32_field(1)
    dungeon_entry_config_id: int = betterproto.uint32_field(2)
    recommend_dungeon_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetDailyDungeonEntryInfoReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetDailyDungeonEntryInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    daily_dungeon_info_list: List["DailyDungeonEntryInfo"] = betterproto.message_field(
        2
    )


@dataclass(eq=False, repr=False)
class GetGachaInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GachaInfo(betterproto.Message):
    gacha_type: int = betterproto.uint32_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    begin_time: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(4)
    cost_item_id: int = betterproto.uint32_field(5)
    cost_item_num: int = betterproto.uint32_field(6)
    gacha_prefab_path: str = betterproto.string_field(7)
    gacha_prob_url: str = betterproto.string_field(8)
    gacha_record_url: str = betterproto.string_field(9)
    gacha_preview_prefab_path: str = betterproto.string_field(10)
    ten_cost_item_id: int = betterproto.uint32_field(11)
    ten_cost_item_num: int = betterproto.uint32_field(12)
    left_gacha_times: int = betterproto.uint32_field(13)
    gacha_times_limit: int = betterproto.uint32_field(14)
    gacha_sort_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GetGachaInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    gacha_info_list: List["GachaInfo"] = betterproto.message_field(2)
    gacha_random: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DoGachaReq(betterproto.Message):
    gacha_type: int = betterproto.uint32_field(1)
    gacha_times: int = betterproto.uint32_field(2)
    gacha_random: int = betterproto.uint32_field(3)
    gacha_schedule_id: int = betterproto.uint32_field(4)
    gacha_tag: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class GachaTransferItem(betterproto.Message):
    item: "ItemParam" = betterproto.message_field(1)
    is_transfer_item_new: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class GachaItem(betterproto.Message):
    gacha_item: "ItemParam" = betterproto.message_field(1)
    transfer_items: List["GachaTransferItem"] = betterproto.message_field(2)
    is_flash_card: bool = betterproto.bool_field(3)
    is_gacha_item_new: bool = betterproto.bool_field(4)
    token_item_list: List["ItemParam"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class DoGachaRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    gacha_type: int = betterproto.uint32_field(2)
    gacha_times: int = betterproto.uint32_field(3)
    gacha_schedule_id: int = betterproto.uint32_field(4)
    gacha_item_list: List["GachaItem"] = betterproto.message_field(5)
    new_gacha_random: int = betterproto.uint32_field(6)
    cost_item_id: int = betterproto.uint32_field(7)
    cost_item_num: int = betterproto.uint32_field(8)
    ten_cost_item_id: int = betterproto.uint32_field(9)
    ten_cost_item_num: int = betterproto.uint32_field(10)
    left_gacha_times: int = betterproto.uint32_field(11)
    gacha_times_limit: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GadgetInteractReq(betterproto.Message):
    gadget_entity_id: int = betterproto.uint32_field(1)
    op_type: "InterOpType" = betterproto.enum_field(2)
    gadget_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GadgetInteractRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    gadget_entity_id: int = betterproto.uint32_field(2)
    interact_type: "InteractType" = betterproto.enum_field(3)
    op_type: "InterOpType" = betterproto.enum_field(4)
    gadget_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GadgetStateNotify(betterproto.Message):
    gadget_entity_id: int = betterproto.uint32_field(1)
    gadget_state: int = betterproto.uint32_field(2)
    is_enable_interact: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class WorktopOptionNotify(betterproto.Message):
    gadget_entity_id: int = betterproto.uint32_field(1)
    option_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SelectWorktopOptionReq(betterproto.Message):
    gadget_entity_id: int = betterproto.uint32_field(1)
    option_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SelectWorktopOptionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    gadget_entity_id: int = betterproto.uint32_field(2)
    option_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BossChestActivateNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    qualify_uid_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class Investigation(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    progress: int = betterproto.uint32_field(2)
    total_progress: int = betterproto.uint32_field(3)
    state: "InvestigationState" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class InvestigationTarget(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)
    investigation_id: int = betterproto.uint32_field(2)
    state: "InvestigationTargetState" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class PlayerInvestigationAllInfoNotify(betterproto.Message):
    investigation_list: List["Investigation"] = betterproto.message_field(1)
    investigation_target_list: List["InvestigationTarget"] = betterproto.message_field(
        2
    )


@dataclass(eq=False, repr=False)
class TakeInvestigationRewardReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeInvestigationRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TakeInvestigationTargetRewardReq(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeInvestigationTargetRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    quest_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetInvestigationMonsterReq(betterproto.Message):
    city_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class InvestigationMonster(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    city_id: int = betterproto.uint32_field(2)
    level: int = betterproto.uint32_field(3)
    is_alive: bool = betterproto.bool_field(4)
    next_refresh_time: int = betterproto.uint32_field(5)
    refresh_interval: int = betterproto.uint32_field(6)
    pos: "Vector" = betterproto.message_field(7)
    lock_state: "InvestigationMonsterLockState" = betterproto.enum_field(8)
    max_boss_chest_num: int = betterproto.uint32_field(9)
    boss_chest_num: int = betterproto.uint32_field(10)
    world_resin: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class GetInvestigationMonsterRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    monster_list: List["InvestigationMonster"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PlayerInvestigationNotify(betterproto.Message):
    investigation_list: List["Investigation"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PlayerInvestigationTargetNotify(betterproto.Message):
    investigation_target_list: List["InvestigationTarget"] = betterproto.message_field(
        1
    )


@dataclass(eq=False, repr=False)
class PlayerStoreNotify(betterproto.Message):
    store_type: "StoreType" = betterproto.enum_field(1)
    item_list: List["Item"] = betterproto.message_field(2)
    weight_limit: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class StoreWeightLimitNotify(betterproto.Message):
    store_type: "StoreType" = betterproto.enum_field(1)
    weight_limit: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class StoreItemChangeNotify(betterproto.Message):
    store_type: "StoreType" = betterproto.enum_field(1)
    item_list: List["Item"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class StoreItemDelNotify(betterproto.Message):
    store_type: "StoreType" = betterproto.enum_field(1)
    guid_list: List[int] = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class ItemHint(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(2)
    is_new: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class ItemAddHintNotify(betterproto.Message):
    item_list: List["ItemHint"] = betterproto.message_field(1)
    position: "Vector" = betterproto.message_field(2)
    is_position_valid: bool = betterproto.bool_field(3)
    reason: int = betterproto.uint32_field(4)
    quest_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class UseItemReq(betterproto.Message):
    guid: int = betterproto.uint64_field(1)
    count: int = betterproto.uint32_field(2)
    target_guid: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class UseItemRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    guid: int = betterproto.uint64_field(2)
    item_id: int = betterproto.uint32_field(3)
    target_guid: int = betterproto.uint64_field(4)


@dataclass(eq=False, repr=False)
class DropItemReq(betterproto.Message):
    store_type: "StoreType" = betterproto.enum_field(1)
    guid: int = betterproto.uint64_field(2)
    count: int = betterproto.uint32_field(3)
    pos: "Vector" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class DropItemRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    store_type: "StoreType" = betterproto.enum_field(2)
    guid: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class WearEquipReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    equip_guid: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class WearEquipRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    avatar_guid: int = betterproto.uint64_field(2)
    equip_guid: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class TakeoffEquipReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    slot: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TakeoffEquipRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    avatar_guid: int = betterproto.uint64_field(2)
    slot: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AvatarEquipChangeNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    equip_type: int = betterproto.uint32_field(2)
    item_id: int = betterproto.uint32_field(3)
    equip_guid: int = betterproto.uint64_field(4)
    weapon: "SceneWeaponInfo" = betterproto.message_field(5)
    reliquary: "SceneReliquaryInfo" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class WeaponUpgradeReq(betterproto.Message):
    target_weapon_guid: int = betterproto.uint64_field(1)
    food_weapon_guid_list: List[int] = betterproto.uint64_field(2)
    item_param_list: List["ItemParam"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class WeaponUpgradeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    target_weapon_guid: int = betterproto.uint64_field(2)
    old_level: int = betterproto.uint32_field(3)
    cur_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class WeaponPromoteReq(betterproto.Message):
    target_weapon_guid: int = betterproto.uint64_field(1)


@dataclass(eq=False, repr=False)
class WeaponPromoteRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    target_weapon_guid: int = betterproto.uint64_field(2)
    old_promote_level: int = betterproto.uint32_field(3)
    cur_promote_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ReliquaryUpgradeReq(betterproto.Message):
    target_reliquary_guid: int = betterproto.uint64_field(1)
    food_reliquary_guid_list: List[int] = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class ReliquaryUpgradeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    target_reliquary_guid: int = betterproto.uint64_field(2)
    old_level: int = betterproto.uint32_field(3)
    cur_level: int = betterproto.uint32_field(4)
    power_up_rate: int = betterproto.uint32_field(5)
    old_append_prop_list: List[int] = betterproto.uint32_field(6)
    cur_append_prop_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ReliquaryPromoteReq(betterproto.Message):
    target_guid: int = betterproto.uint64_field(1)
    item_guid: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class ReliquaryPromoteRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    target_reliquary_guid: int = betterproto.uint64_field(2)
    old_promote_level: int = betterproto.uint32_field(3)
    cur_promote_level: int = betterproto.uint32_field(4)
    old_append_prop_list: List[int] = betterproto.uint32_field(5)
    cur_append_prop_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class AvatarCardChangeReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    item_id: int = betterproto.uint32_field(2)
    count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AvatarCardChangeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class GrantRewardNotify(betterproto.Message):
    reward: "Reward" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class WeaponAwakenReq(betterproto.Message):
    target_weapon_guid: int = betterproto.uint64_field(1)
    item_guid: int = betterproto.uint64_field(2)
    affix_level_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class WeaponAwakenRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    target_weapon_guid: int = betterproto.uint64_field(2)
    old_affix_level_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    cur_affix_level_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    avatar_guid: int = betterproto.uint64_field(5)


@dataclass(eq=False, repr=False)
class ItemCdGroupTimeNotify(betterproto.Message):
    item_cd_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT64
    )


@dataclass(eq=False, repr=False)
class DropHintNotify(betterproto.Message):
    item_id_list: List[int] = betterproto.uint32_field(1)
    position: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CombineReq(betterproto.Message):
    combine_id: int = betterproto.uint32_field(1)
    combine_count: int = betterproto.uint32_field(2)
    avatar_guid: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class CombineRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    combine_id: int = betterproto.uint32_field(2)
    combine_count: int = betterproto.uint32_field(3)
    avatar_guid: int = betterproto.uint64_field(4)
    cost_item_list: List["ItemParam"] = betterproto.message_field(5)
    result_item_list: List["ItemParam"] = betterproto.message_field(6)
    total_random_item_list: List["ItemParam"] = betterproto.message_field(7)
    total_return_item_list: List["ItemParam"] = betterproto.message_field(8)
    total_extra_item_list: List["ItemParam"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class ForgeQueueData(betterproto.Message):
    queue_id: int = betterproto.uint32_field(1)
    forge_id: int = betterproto.uint32_field(2)
    finish_count: int = betterproto.uint32_field(3)
    unfinish_count: int = betterproto.uint32_field(4)
    next_finish_timestamp: int = betterproto.uint32_field(5)
    total_finish_timestamp: int = betterproto.uint32_field(6)
    avatar_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ForgeQueueDataNotify(betterproto.Message):
    forge_queue_map: Dict[int, "ForgeQueueData"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    removed_forge_queue_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ForgeGetQueueDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ForgeGetQueueDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    max_queue_num: int = betterproto.uint32_field(2)
    forge_queue_map: Dict[int, "ForgeQueueData"] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class ForgeStartReq(betterproto.Message):
    forge_id: int = betterproto.uint32_field(1)
    forge_count: int = betterproto.uint32_field(2)
    avatar_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ForgeStartRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class ForgeQueueManipulateReq(betterproto.Message):
    forge_queue_id: int = betterproto.uint32_field(1)
    manipulate_type: "ForgeQueueManipulateType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class ForgeQueueManipulateRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    manipulate_type: "ForgeQueueManipulateType" = betterproto.enum_field(2)
    output_item_list: List["ItemParam"] = betterproto.message_field(3)
    return_item_list: List["ItemParam"] = betterproto.message_field(4)
    extra_output_item_list: List["ItemParam"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ResinChangeNotify(betterproto.Message):
    cur_value: int = betterproto.uint32_field(1)
    next_add_timestamp: int = betterproto.uint32_field(2)
    cur_buy_count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class WorldResinChangeNotify(betterproto.Message):
    cur_value: int = betterproto.uint32_field(1)
    next_add_timestamp: int = betterproto.uint32_field(2)
    cur_buy_count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BuyWorldResinReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BuyWorldResinRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    cur_value: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BuyResinReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BuyResinRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    cur_value: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MaterialDeleteReturnNotify(betterproto.Message):
    delete_material_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    return_item_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class TakeMaterialDeleteReturnReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeMaterialDeleteReturnRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaterialDeleteUpdateNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MailChangeNotify(betterproto.Message):
    mail_list: List["MailData"] = betterproto.message_field(1)
    del_mail_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ReadMailNotify(betterproto.Message):
    mail_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetMailItemReq(betterproto.Message):
    mail_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetMailItemRsp(betterproto.Message):
    retcode: int = betterproto.uint32_field(1)
    mail_id_list: List[int] = betterproto.uint32_field(2)
    item_list: List["EquipParam"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class DelMailReq(betterproto.Message):
    mail_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DelMailRsp(betterproto.Message):
    retcode: int = betterproto.uint32_field(1)
    mail_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetAuthkeyReq(betterproto.Message):
    auth_appid: str = betterproto.string_field(1)
    sign_type: int = betterproto.uint32_field(2)
    authkey_ver: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetAuthkeyRsp(betterproto.Message):
    retcode: int = betterproto.uint32_field(1)
    authkey: str = betterproto.string_field(2)
    auth_appid: str = betterproto.string_field(3)
    sign_type: int = betterproto.uint32_field(4)
    authkey_ver: int = betterproto.uint32_field(5)
    game_biz: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class ClientNewMailNotify(betterproto.Message):
    not_read_num: int = betterproto.uint32_field(1)
    not_got_attachment_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetAllMailReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetAllMailRsp(betterproto.Message):
    retcode: int = betterproto.uint32_field(1)
    mail_list: List["MailData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class KeepAliveNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GmTalkReq(betterproto.Message):
    msg: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class GmTalkRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    msg: str = betterproto.string_field(2)
    retmsg: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class MsgParam(betterproto.Message):
    int_param: int = betterproto.uint32_field(1, group="param")
    flt_param: float = betterproto.float_field(2, group="param")
    str_param: str = betterproto.string_field(3, group="param")


@dataclass(eq=False, repr=False)
class ShowMessageNotify(betterproto.Message):
    msg_id: "SvrMsgId" = betterproto.enum_field(1)
    params: List["MsgParam"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PingReq(betterproto.Message):
    seq: int = betterproto.uint32_field(1)
    client_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PingRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    seq: int = betterproto.uint32_field(2)
    client_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetOnlinePlayerListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetOnlinePlayerListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    player_info_list: List["OnlinePlayerInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ServerTimeNotify(betterproto.Message):
    server_time: int = betterproto.uint64_field(1)


@dataclass(eq=False, repr=False)
class ServerLogNotify(betterproto.Message):
    log_type: "ServerLogType" = betterproto.enum_field(1)
    log_level: "ServerLogLevel" = betterproto.enum_field(2)
    server_log: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class ClientReconnectNotify(betterproto.Message):
    reason: "ClientReconnectReason" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ClientStatData(betterproto.Message):
    x: float = betterproto.float_field(1)
    y: float = betterproto.float_field(2)
    z: float = betterproto.float_field(3)
    fps: float = betterproto.float_field(4)
    memory: float = betterproto.float_field(5)


@dataclass(eq=False, repr=False)
class ClientFpsStatusNotify(betterproto.Message):
    is_low_fps: bool = betterproto.bool_field(1)
    fps: float = betterproto.float_field(2)
    stat_list: List["ClientStatData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class RobotPushPlayerDataNotify(betterproto.Message):
    bin: bytes = betterproto.bytes_field(1)


@dataclass(eq=False, repr=False)
class ClientReportNotify(betterproto.Message):
    report_type: str = betterproto.string_field(1)
    report_value: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class MonsterSummonTagNotify(betterproto.Message):
    monster_entity_id: int = betterproto.uint32_field(1)
    summon_tag_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpNotify(betterproto.Message):
    src_player_info: "OnlinePlayerInfo" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpResultNotify(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)
    is_agreed: bool = betterproto.bool_field(2)
    reason: "PlayerApplyEnterMpResultNotifyReason" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpResultReq(betterproto.Message):
    apply_uid: int = betterproto.uint32_field(1)
    is_agreed: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpResultRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    apply_uid: int = betterproto.uint32_field(2)
    is_agreed: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class PlayerQuitFromMpNotify(betterproto.Message):
    reason: "PlayerQuitFromMpNotifyQuitReason" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class PlayerPreEnterMpNotify(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    state: "PlayerPreEnterMpNotifyState" = betterproto.enum_field(2)
    nickname: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class GetPlayerMpModeAvailabilityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetPlayerMpModeAvailabilityRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    mp_ret: int = betterproto.int32_field(2)
    param_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class NpcTalkReq(betterproto.Message):
    npc_entity_id: int = betterproto.uint32_field(1)
    talk_type: "NpcTalkType" = betterproto.enum_field(2)
    talk_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class NpcTalkRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    npc_entity_id: int = betterproto.uint32_field(2)
    talk_type: "NpcTalkType" = betterproto.enum_field(3)
    cur_talk_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetSceneNpcPositionReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    npc_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetSceneNpcPositionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    scene_id: int = betterproto.uint32_field(2)
    npc_info_list: List["NpcPositionInfo"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class QueryFilter(betterproto.Message):
    type_id: int = betterproto.int32_field(1)
    area_mask: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class QueryPathReq(betterproto.Message):
    query_type: "QueryPathReqOptionType" = betterproto.enum_field(1)
    query_id: int = betterproto.int32_field(2)
    scene_id: int = betterproto.uint32_field(3)
    source_pos: "Vector" = betterproto.message_field(4)
    destination_pos: List["Vector"] = betterproto.message_field(5)
    filter: "QueryFilter" = betterproto.message_field(6)
    destination_extend: "Vector3Int" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class QueryPathRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    query_id: int = betterproto.int32_field(2)
    query_status: "QueryPathRspPathStatusType" = betterproto.enum_field(3)
    corners: List["Vector"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class ObstacleInfo(betterproto.Message):
    obstacle_id: int = betterproto.int32_field(1)
    shape: "ObstacleInfoShapeType" = betterproto.enum_field(2)
    center: "Vector" = betterproto.message_field(3)
    rotation: "MathQuaternion" = betterproto.message_field(4)
    extents: "Vector3Int" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ObstacleModifyNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    add_obstacles: List["ObstacleInfo"] = betterproto.message_field(2)
    remove_obstacle_ids: List[int] = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class PathfindingPingNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PathfindingEnterSceneReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    version: int = betterproto.uint32_field(2)
    obstacles: List["ObstacleInfo"] = betterproto.message_field(3)
    is_editor: bool = betterproto.bool_field(4)
    activity_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class PathfindingEnterSceneRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class GmShowObstacleReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GmShowObstacleRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    obstacles: List["ObstacleInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GmShowNavMeshReq(betterproto.Message):
    center: "Vector" = betterproto.message_field(1)
    extent: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PbNavMeshPoly(betterproto.Message):
    vects: List[int] = betterproto.int32_field(1)
    edge_types: List["PbNavMeshPolyEdgeType"] = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class PbNavMeshTile(betterproto.Message):
    vecs: List["Vector"] = betterproto.message_field(1)
    polys: List["PbNavMeshPoly"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GmShowNavMeshRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    tiles: List["PbNavMeshTile"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetPlayerTokenReq(betterproto.Message):
    account_type: int = betterproto.uint32_field(1)
    account_uid: str = betterproto.string_field(2)
    account_token: str = betterproto.string_field(3)
    account_ext: str = betterproto.string_field(4)
    uid: int = betterproto.uint32_field(5)
    is_guest: bool = betterproto.bool_field(6)
    platform_type: int = betterproto.uint32_field(7)
    cloud_client_ip: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GetPlayerTokenRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    msg: str = betterproto.string_field(2)
    uid: int = betterproto.uint32_field(3)
    token: str = betterproto.string_field(4)
    black_uid_end_time: int = betterproto.uint32_field(5)
    account_type: int = betterproto.uint32_field(6)
    account_uid: str = betterproto.string_field(7)
    is_proficient_player: bool = betterproto.bool_field(8)
    secret_key: str = betterproto.string_field(9)
    gm_uid: int = betterproto.uint32_field(10)
    secret_key_seed: int = betterproto.uint64_field(11)


@dataclass(eq=False, repr=False)
class PlayerLoginReq(betterproto.Message):
    token: str = betterproto.string_field(1)
    client_version: str = betterproto.string_field(2)
    system_version: str = betterproto.string_field(3)
    device_name: str = betterproto.string_field(4)
    device_uuid: str = betterproto.string_field(5)
    target_uid: int = betterproto.uint32_field(6)
    login_rand: int = betterproto.uint64_field(7)
    is_editor: bool = betterproto.bool_field(8)
    language_type: int = betterproto.uint32_field(9)
    account_type: int = betterproto.uint32_field(10)
    account_uid: str = betterproto.string_field(11)
    platform: str = betterproto.string_field(12)
    device_info: str = betterproto.string_field(13)
    platform_type: int = betterproto.uint32_field(14)
    is_guest: bool = betterproto.bool_field(15)
    cloud_client_ip: int = betterproto.uint32_field(16)
    gm_uid: int = betterproto.uint32_field(17)


@dataclass(eq=False, repr=False)
class PlayerLoginRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    player_data: bytes = betterproto.bytes_field(2)
    is_new_player: bool = betterproto.bool_field(3)
    target_uid: int = betterproto.uint32_field(4)
    login_rand: int = betterproto.uint64_field(5)
    is_use_ability_hash: bool = betterproto.bool_field(6)
    ability_hash_code: int = betterproto.int32_field(7)
    ability_hash_map: Dict[str, int] = betterproto.map_field(
        8, betterproto.TYPE_STRING, betterproto.TYPE_INT32
    )
    client_data_version: int = betterproto.uint32_field(9)
    res_version: int = betterproto.uint32_field(10)
    is_relogin: bool = betterproto.bool_field(11)
    client_silence_data_version: int = betterproto.uint32_field(13)
    game_biz: str = betterproto.string_field(14)
    player_data_version: int = betterproto.uint32_field(15)
    client_md5: str = betterproto.string_field(16)
    client_silence_md5: str = betterproto.string_field(17)
    res_md5: str = betterproto.string_field(18)
    is_res_need_relogin: bool = betterproto.bool_field(19)
    res_version_config: "ResVersionConfig" = betterproto.message_field(20)


@dataclass(eq=False, repr=False)
class PlayerLogoutReq(betterproto.Message):
    reason: "PlayerLogoutReqReason" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class PlayerLogoutRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class PlayerLogoutNotify(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class PlayerDataNotify(betterproto.Message):
    nick_name: str = betterproto.string_field(1)
    server_time: int = betterproto.uint64_field(2)
    is_first_login_today: bool = betterproto.bool_field(3)
    region_id: int = betterproto.uint32_field(4)
    prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class ChangeGameTimeReq(betterproto.Message):
    game_time: int = betterproto.uint32_field(1)
    is_force_set: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class ChangeGameTimeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    cur_game_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerGameTimeNotify(betterproto.Message):
    game_time: int = betterproto.uint32_field(1)
    uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerPropNotify(betterproto.Message):
    prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class ClientTriggerEventNotify(betterproto.Message):
    event_type: "EventTriggerType" = betterproto.enum_field(1)
    force_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SetPlayerPropReq(betterproto.Message):
    prop_list: List["PropValue"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SetPlayerPropRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class SetPlayerBornDataReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    nick_name: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class SetPlayerBornDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class DoSetPlayerBornDataNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PlayerPropChangeNotify(betterproto.Message):
    prop_type: int = betterproto.uint32_field(1)
    prop_delta: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SetPlayerNameReq(betterproto.Message):
    nick_name: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class SetPlayerNameRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    nick_name: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class SetOpenStateReq(betterproto.Message):
    key: int = betterproto.uint32_field(1)
    value: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SetOpenStateRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    key: int = betterproto.uint32_field(2)
    value: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class OpenStateUpdateNotify(betterproto.Message):
    open_state_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class OpenStateChangeNotify(betterproto.Message):
    open_state_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class PlayerCookReq(betterproto.Message):
    recipe_id: int = betterproto.uint32_field(1)
    qte_quality: int = betterproto.uint32_field(2)
    assist_avatar: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerCookRsp(betterproto.Message):
    retcode: int = betterproto.uint32_field(1)
    recipe_data: "CookRecipeData" = betterproto.message_field(2)
    item: "ItemParam" = betterproto.message_field(3)
    qte_quality: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PlayerRandomCookReq(betterproto.Message):
    material_list: List["ItemParam"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PlayerRandomCookRsp(betterproto.Message):
    retcode: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CookRecipeData(betterproto.Message):
    recipe_id: int = betterproto.uint32_field(1)
    proficiency: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CookDataNotify(betterproto.Message):
    grade: int = betterproto.uint32_field(1)
    recipe_data_list: List["CookRecipeData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CookRecipeDataNotify(betterproto.Message):
    recipe_data: "CookRecipeData" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CookGradeDataNotify(betterproto.Message):
    grade: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PlayerCompoundMaterialReq(betterproto.Message):
    compound_id: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CompoundQueueData(betterproto.Message):
    compound_id: int = betterproto.uint32_field(1)
    output_count: int = betterproto.uint32_field(2)
    wait_count: int = betterproto.uint32_field(3)
    output_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PlayerCompoundMaterialRsp(betterproto.Message):
    retcode: int = betterproto.uint32_field(1)
    compound_que_data: "CompoundQueueData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeCompoundOutputReq(betterproto.Message):
    compound_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeCompoundOutputRsp(betterproto.Message):
    retcode: int = betterproto.uint32_field(1)
    item_list: List["ItemParam"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CompoundDataNotify(betterproto.Message):
    unlock_compound_list: List[int] = betterproto.uint32_field(1)
    compound_que_data_list: List["CompoundQueueData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetCompoundDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetCompoundDataRsp(betterproto.Message):
    retcode: int = betterproto.uint32_field(1)
    unlock_compound_list: List[int] = betterproto.uint32_field(2)
    compound_que_data_list: List["CompoundQueueData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PlayerTimeNotify(betterproto.Message):
    is_paused: bool = betterproto.bool_field(1)
    player_time: int = betterproto.uint64_field(2)
    server_time: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class PlayerSetPauseReq(betterproto.Message):
    is_paused: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class PlayerSetPauseRsp(betterproto.Message):
    retcode: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PlayerSetLanguageReq(betterproto.Message):
    language_type: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PlayerSetLanguageRsp(betterproto.Message):
    retcode: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DataResVersionNotify(betterproto.Message):
    client_data_version: int = betterproto.uint32_field(1)
    client_silence_data_version: int = betterproto.uint32_field(2)
    res_version: int = betterproto.uint32_field(3)
    client_md5: str = betterproto.string_field(5)
    client_silence_md5: str = betterproto.string_field(6)
    res_md5: str = betterproto.string_field(7)
    is_res_need_relogin: bool = betterproto.bool_field(9)
    res_version_config: "ResVersionConfig" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class DailyTaskInfo(betterproto.Message):
    daily_task_id: int = betterproto.uint32_field(1)
    reward_id: int = betterproto.uint32_field(2)
    progress: int = betterproto.uint32_field(3)
    finish_progress: int = betterproto.uint32_field(4)
    is_finished: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class DailyTaskDataNotify(betterproto.Message):
    score_reward_id: int = betterproto.uint32_field(3)
    is_taken_score_reward: bool = betterproto.bool_field(4)
    finished_num: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class DailyTaskProgressNotify(betterproto.Message):
    info: "DailyTaskInfo" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class DailyTaskScoreRewardNotify(betterproto.Message):
    reward_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class WorldOwnerDailyTaskNotify(betterproto.Message):
    task_list: List["DailyTaskInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AddRandTaskInfoNotify(betterproto.Message):
    rand_task_id: int = betterproto.uint32_field(1)
    pos: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class RemoveRandTaskInfoNotify(betterproto.Message):
    rand_task_id: int = betterproto.uint32_field(1)
    is_succ: bool = betterproto.bool_field(2)
    reason: "RemoveRandTaskInfoNotifyFinishReason" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class TakePlayerLevelRewardReq(betterproto.Message):
    level: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakePlayerLevelRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    level: int = betterproto.uint32_field(2)
    reward_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerLevelRewardUpdateNotify(betterproto.Message):
    level_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GivingRecord(betterproto.Message):
    giving_id: int = betterproto.uint32_field(1)
    is_finished: bool = betterproto.bool_field(2)
    last_group_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GivingRecordNotify(betterproto.Message):
    giving_record_list: List["GivingRecord"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GivingRecordChangeNotify(betterproto.Message):
    giving_record: "GivingRecord" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ItemGivingReq(betterproto.Message):
    giving_id: int = betterproto.uint32_field(1)
    item_param_list: List["ItemParam"] = betterproto.message_field(2)
    item_guid_count_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT64, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class ItemGivingRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    giving_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerCookArgsReq(betterproto.Message):
    recipe_id: int = betterproto.uint32_field(1)
    assist_avatar: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerCookArgsRsp(betterproto.Message):
    retcode: int = betterproto.uint32_field(1)
    qte_range_ratio: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class PlayerLuaShellNotify(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    lua_shell: bytes = betterproto.bytes_field(2)


@dataclass(eq=False, repr=False)
class ServerDisconnectClientNotify(betterproto.Message):
    data: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class EntityPropNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class LifeStateChangeNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    life_state: int = betterproto.uint32_field(2)
    source_entity_id: int = betterproto.uint32_field(3)
    attack_tag: str = betterproto.string_field(4)
    die_type: "PlayerDieType" = betterproto.enum_field(5)
    move_reliable_seq: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class EntityFightPropNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )


@dataclass(eq=False, repr=False)
class EntityFightPropUpdateNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )


@dataclass(eq=False, repr=False)
class AvatarFightPropNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )


@dataclass(eq=False, repr=False)
class AvatarFightPropUpdateNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )


@dataclass(eq=False, repr=False)
class EntityFightPropChangeReasonNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    prop_type: int = betterproto.uint32_field(2)
    prop_delta: float = betterproto.float_field(3)
    reason: "PropChangeReason" = betterproto.enum_field(4)
    param_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class AvatarLifeStateChangeNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    life_state: int = betterproto.uint32_field(2)
    source_entity_id: int = betterproto.uint32_field(3)
    attack_tag: str = betterproto.string_field(4)
    die_type: "PlayerDieType" = betterproto.enum_field(5)
    move_reliable_seq: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class AvatarPropChangeReasonNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    prop_type: int = betterproto.uint32_field(2)
    old_value: float = betterproto.float_field(3)
    cur_value: float = betterproto.float_field(4)
    reason: "PropChangeReason" = betterproto.enum_field(5)


@dataclass(eq=False, repr=False)
class PlayerPropChangeReasonNotify(betterproto.Message):
    prop_type: int = betterproto.uint32_field(1)
    old_value: float = betterproto.float_field(2)
    cur_value: float = betterproto.float_field(3)
    reason: "PropChangeReason" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class AvatarPropNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    prop_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_INT64
    )


@dataclass(eq=False, repr=False)
class MarkNewNotify(betterproto.Message):
    mark_new_type: int = betterproto.uint32_field(1)
    id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class QuestListNotify(betterproto.Message):
    quest_list: List["Quest"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class QuestListUpdateNotify(betterproto.Message):
    quest_list: List["Quest"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class QuestDelNotify(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChildQuest(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)
    state: int = betterproto.uint32_field(2)
    quest_config_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ParentQuestRandomInfo(betterproto.Message):
    entrance_id: int = betterproto.uint32_field(1)
    template_id: int = betterproto.uint32_field(2)
    factor_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ParentQuest(betterproto.Message):
    parent_quest_id: int = betterproto.uint32_field(1)
    child_quest_list: List["ChildQuest"] = betterproto.message_field(2)
    is_finished: bool = betterproto.bool_field(3)
    is_random: bool = betterproto.bool_field(4)
    random_info: "ParentQuestRandomInfo" = betterproto.message_field(5)
    quest_var: List[int] = betterproto.int32_field(6)
    parent_quest_state: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class FinishedParentQuestNotify(betterproto.Message):
    parent_quest_list: List["ParentQuest"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class FinishedParentQuestUpdateNotify(betterproto.Message):
    parent_quest_list: List["ParentQuest"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AddQuestContentProgressReq(betterproto.Message):
    content_type: int = betterproto.uint32_field(1)
    param: int = betterproto.uint32_field(2)
    add_progress: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AddQuestContentProgressRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    content_type: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetQuestTalkHistoryReq(betterproto.Message):
    parent_quest_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetQuestTalkHistoryRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    parent_quest_id: int = betterproto.uint32_field(2)
    talk_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QuestCreateEntityReq(betterproto.Message):
    entity: "CreateEntityInfo" = betterproto.message_field(1)
    quest_id: int = betterproto.uint32_field(2)
    is_rewind: bool = betterproto.bool_field(3)
    parent_quest_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class QuestCreateEntityRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    entity_id: int = betterproto.uint32_field(2)
    entity: "CreateEntityInfo" = betterproto.message_field(3)
    quest_id: int = betterproto.uint32_field(7)
    is_rewind: bool = betterproto.bool_field(8)
    parent_quest_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class QuestDestroyEntityReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    quest_id: int = betterproto.uint32_field(2)
    scene_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QuestDestroyEntityRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    entity_id: int = betterproto.uint32_field(2)
    quest_id: int = betterproto.uint32_field(3)
    scene_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class LogTalkNotify(betterproto.Message):
    talk_id: int = betterproto.uint32_field(1)
    is_start: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class LogCutsceneNotify(betterproto.Message):
    cutscene_name: str = betterproto.string_field(1)
    is_start: bool = betterproto.bool_field(2)
    is_skip: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class ChapterStateNotify(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)
    chapter_state: "ChapterState" = betterproto.enum_field(2)
    need_player_level: "ChapterStateNotifyNeedPlayerLevel" = betterproto.message_field(
        3
    )
    need_begin_time: "ChapterStateNotifyNeedBeginTime" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class ChapterStateNotifyNeedPlayerLevel(betterproto.Message):
    is_limit: bool = betterproto.bool_field(1)
    config_need_player_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChapterStateNotifyNeedBeginTime(betterproto.Message):
    is_limit: bool = betterproto.bool_field(1)
    config_need_begin_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class QuestProgressUpdateNotify(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)
    finish_progress_list: List[int] = betterproto.uint32_field(2)
    fail_progress_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QuestVarOp(betterproto.Message):
    index: int = betterproto.uint32_field(1)
    value: int = betterproto.int32_field(2)
    is_add: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class QuestUpdateQuestVarReq(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)
    quest_var_op_list: List["QuestVarOp"] = betterproto.message_field(2)
    parent_quest_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QuestUpdateQuestVarRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    quest_id: int = betterproto.uint32_field(2)
    parent_quest_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QuestUpdateQuestVarNotify(betterproto.Message):
    parent_quest_id: int = betterproto.uint32_field(1)
    quest_var: List[int] = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class QuestDestroyNpcReq(betterproto.Message):
    npc_id: int = betterproto.uint32_field(1)
    parent_quest_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class QuestDestroyNpcRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    npc_id: int = betterproto.uint32_field(2)
    parent_quest_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerEnterSceneNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    pos: "Vector" = betterproto.message_field(2)
    scene_begin_time: int = betterproto.uint64_field(3)
    type: "EnterType" = betterproto.enum_field(4)
    target_uid: int = betterproto.uint32_field(6)
    prev_scene_id: int = betterproto.uint32_field(9)
    prev_pos: "Vector" = betterproto.message_field(10)
    dungeon_id: int = betterproto.uint32_field(11)
    world_level: int = betterproto.uint32_field(12)
    enter_scene_token: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class LeaveSceneReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class LeaveSceneRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class SceneInitFinishReq(betterproto.Message):
    enter_scene_token: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SceneInitFinishRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class SceneEntityAppearNotify(betterproto.Message):
    entity_list: List["SceneEntityInfo"] = betterproto.message_field(1)
    appear_type: "VisionType" = betterproto.enum_field(2)
    param: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SceneEntityDisappearNotify(betterproto.Message):
    entity_list: List[int] = betterproto.uint32_field(1)
    disappear_type: "VisionType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class SceneEntityMoveReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    motion_info: "MotionInfo" = betterproto.message_field(2)
    scene_time: int = betterproto.uint32_field(3)
    reliable_seq: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SceneEntityMoveRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    entity_id: int = betterproto.uint32_field(2)
    fail_motion: "MotionInfo" = betterproto.message_field(3)
    scene_time: int = betterproto.uint32_field(4)
    reliable_seq: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SceneAvatarStaminaStepReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SceneAvatarStaminaStepRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class SceneEntityMoveNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    motion_info: "MotionInfo" = betterproto.message_field(2)
    scene_time: int = betterproto.uint32_field(3)
    reliable_seq: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ScenePlayerLocationNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    player_loc_list: List["PlayerLocationInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetScenePointReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    belong_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CityInfo(betterproto.Message):
    city_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    crystal_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetScenePointRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    scene_id: int = betterproto.uint32_field(2)
    unlocked_point_list: List[int] = betterproto.uint32_field(3)
    belong_uid: int = betterproto.uint32_field(4)
    unlock_area_list: List[int] = betterproto.uint32_field(5)
    locked_point_list: List[int] = betterproto.uint32_field(6)
    to_be_explore_dungeon_entry_list: List[int] = betterproto.uint32_field(7)
    not_explored_dungeon_entry_list: List[int] = betterproto.uint32_field(8)
    group_unlimit_point_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class EnterTransPointRegionNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    point_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ExitTransPointRegionNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    point_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ScenePointUnlockNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    point_list: List[int] = betterproto.uint32_field(2)
    locked_point_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SceneTransToPointReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    point_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SceneTransToPointRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    scene_id: int = betterproto.uint32_field(2)
    point_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EntityJumpNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    jump_type: "EntityJumpNotifyType" = betterproto.enum_field(2)
    pos: "Vector" = betterproto.message_field(3)
    rot: "Vector" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GetSceneAreaReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    belong_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetSceneAreaRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    scene_id: int = betterproto.uint32_field(2)
    area_id_list: List[int] = betterproto.uint32_field(3)
    city_info_list: List["CityInfo"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class SceneAreaUnlockNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    area_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SceneEntityDrownReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SceneEntityDrownRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    entity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SceneCreateEntityReq(betterproto.Message):
    entity: "CreateEntityInfo" = betterproto.message_field(1)
    reason: "CreateReason" = betterproto.enum_field(2)
    is_destroy_when_disconnect: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class SceneCreateEntityRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    entity_id: int = betterproto.uint32_field(2)
    entity: "CreateEntityInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SceneDestroyEntityReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SceneDestroyEntityRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    entity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SceneForceUnlockNotify(betterproto.Message):
    force_id_list: List[int] = betterproto.uint32_field(1)
    is_add: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class SceneForceLockNotify(betterproto.Message):
    force_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class EnterWorldAreaReq(betterproto.Message):
    area_type: int = betterproto.uint32_field(1)
    area_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EnterWorldAreaRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    area_type: int = betterproto.uint32_field(2)
    area_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EntityForceSyncReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    motion_info: "MotionInfo" = betterproto.message_field(2)
    scene_time: int = betterproto.uint32_field(3)
    room_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class EntityForceSyncRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    entity_id: int = betterproto.uint32_field(2)
    fail_motion: "MotionInfo" = betterproto.message_field(3)
    scene_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SceneAreaExploreNotify(betterproto.Message):
    area_id: int = betterproto.uint32_field(1)
    explore_percent: float = betterproto.float_field(2)
    event_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SceneGetAreaExplorePercentReq(betterproto.Message):
    area_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SceneGetAreaExplorePercentRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    explore_percent: float = betterproto.float_field(2)
    area_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ClientTransmitReq(betterproto.Message):
    pos: "Vector" = betterproto.message_field(1)
    rot: "Vector" = betterproto.message_field(2)
    reason: "TransmitReason" = betterproto.enum_field(3)
    scene_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ClientTransmitRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    reason: "TransmitReason" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class EnterSceneWeatherAreaNotify(betterproto.Message):
    weather_gadget_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ExitSceneWeatherAreaNotify(betterproto.Message):
    weather_gadget_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SceneAreaWeatherNotify(betterproto.Message):
    weather_gadget_id: int = betterproto.uint32_field(1)
    weather_value_map: Dict[int, str] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_STRING
    )
    weather_area_id: int = betterproto.uint32_field(3)
    climate_type: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ScenePlayerInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    peer_id: int = betterproto.uint32_field(2)
    name: str = betterproto.string_field(3)
    is_connected: bool = betterproto.bool_field(4)
    scene_id: int = betterproto.uint32_field(5)
    online_player_info: "OnlinePlayerInfo" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class ScenePlayerInfoNotify(betterproto.Message):
    player_info_list: List["ScenePlayerInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PlayerLocationInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    pos: "Vector" = betterproto.message_field(2)
    rot: "Vector" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class WorldPlayerLocationNotify(betterproto.Message):
    player_loc_list: List["PlayerLocationInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class BeginCameraSceneLookNotify(betterproto.Message):
    look_pos: "Vector" = betterproto.message_field(1)
    duration: float = betterproto.float_field(2)
    is_force: bool = betterproto.bool_field(3)
    is_recover_keep_current: bool = betterproto.bool_field(4)
    is_allow_input: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class EndCameraSceneLookNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MarkEntityInMinMapNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    position: "Vector" = betterproto.message_field(2)
    monster_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class UnmarkEntityInMinMapNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DropSubfieldReq(betterproto.Message):
    drop_type: "DropSubfieldType" = betterproto.enum_field(1)
    drop_param: int = betterproto.uint32_field(2)
    entity_id: int = betterproto.uint32_field(3)
    subfield_name: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class DropSubfieldRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class ExecuteGroupTriggerReq(betterproto.Message):
    source_entity_id: int = betterproto.uint32_field(1)
    source_name: str = betterproto.string_field(2)
    target_entity_id: int = betterproto.uint32_field(3)
    param1: int = betterproto.int32_field(4)
    param2: int = betterproto.int32_field(5)
    param3: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class ExecuteGroupTriggerRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class LevelupCityReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    area_id: int = betterproto.uint32_field(2)
    item_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class LevelupCityRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    scene_id: int = betterproto.uint32_field(2)
    area_id: int = betterproto.uint32_field(3)
    city_info: "CityInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class RoutePointChangeInfo(betterproto.Message):
    point_index: int = betterproto.uint32_field(1)
    target_velocity: float = betterproto.float_field(2)
    wait_time: float = betterproto.float_field(3)


@dataclass(eq=False, repr=False)
class SceneRouteChangeInfo(betterproto.Message):
    route_id: int = betterproto.uint32_field(1)
    type: int = betterproto.uint32_field(2)
    is_forward: bool = betterproto.bool_field(3)
    point_list: List["RoutePointChangeInfo"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class SceneRouteChangeNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    route_list: List["SceneRouteChangeInfo"] = betterproto.message_field(2)
    scene_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlatformStartRouteNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    platform: "PlatformInfo" = betterproto.message_field(2)
    scene_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlatformStopRouteNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    scene_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlatformChangeRouteNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    platform: "PlatformInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ScenePlayerSoundNotify(betterproto.Message):
    sound_name: str = betterproto.string_field(1)
    play_pos: "Vector" = betterproto.message_field(2)
    play_type: "ScenePlayerSoundNotifyPlaySoundType" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class PersonalSceneJumpReq(betterproto.Message):
    point_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PersonalSceneJumpRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    dest_scene_id: int = betterproto.uint32_field(2)
    dest_pos: "Vector" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SealBattleBeginNotify(betterproto.Message):
    seal_entity_id: int = betterproto.uint32_field(1)
    seal_radius: int = betterproto.uint32_field(2)
    seal_max_progress: int = betterproto.uint32_field(3)
    battle_type: "SealBattleType" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class SealBattleEndNotify(betterproto.Message):
    seal_entity_id: int = betterproto.uint32_field(1)
    is_win: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class SealBattleProgressNotify(betterproto.Message):
    seal_entity_id: int = betterproto.uint32_field(1)
    progress: int = betterproto.uint32_field(2)
    max_progress: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(4)
    seal_radius: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ClientPauseNotify(betterproto.Message):
    is_open: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class AvatarEnterSceneInfo(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    avatar_entity_id: int = betterproto.uint32_field(2)
    avatar_ability_info: "AbilitySyncStateInfo" = betterproto.message_field(3)
    buff_id_list: List[int] = betterproto.uint32_field(4)
    weapon_guid: int = betterproto.uint64_field(5)
    weapon_entity_id: int = betterproto.uint32_field(6)
    weapon_ability_info: "AbilitySyncStateInfo" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class TeamEnterSceneInfo(betterproto.Message):
    team_entity_id: int = betterproto.uint32_field(1)
    team_ability_info: "AbilitySyncStateInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MpLevelEntityInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    authority_peer_id: int = betterproto.uint32_field(2)
    ability_info: "AbilitySyncStateInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PlayerEnterSceneInfoNotify(betterproto.Message):
    cur_avatar_entity_id: int = betterproto.uint32_field(1)
    avatar_enter_info: List["AvatarEnterSceneInfo"] = betterproto.message_field(2)
    team_enter_info: "TeamEnterSceneInfo" = betterproto.message_field(3)
    mp_level_entity_info: "MpLevelEntityInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class JoinPlayerSceneReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class JoinPlayerSceneRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class SceneKickPlayerReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SceneKickPlayerRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SceneKickPlayerNotify(betterproto.Message):
    kicker_uid: int = betterproto.uint32_field(1)
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class HitClientTrivialNotify(betterproto.Message):
    position: "Vector" = betterproto.message_field(1)
    owner_entity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BackMyWorldReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BackMyWorldRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class SeeMonsterReq(betterproto.Message):
    monster_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SeeMonsterRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class AddSeenMonsterNotify(betterproto.Message):
    monster_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AllSeenMonsterNotify(betterproto.Message):
    monster_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SceneTimeNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    is_paused: bool = betterproto.bool_field(2)
    scene_time: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class EnterSceneReadyReq(betterproto.Message):
    enter_scene_token: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class EnterSceneReadyRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class EnterScenePeerNotify(betterproto.Message):
    dest_scene_id: int = betterproto.uint32_field(1)
    peer_id: int = betterproto.uint32_field(2)
    host_peer_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EnterSceneDoneReq(betterproto.Message):
    enter_scene_token: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class EnterSceneDoneRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class WorldPlayerDieNotify(betterproto.Message):
    die_type: "PlayerDieType" = betterproto.enum_field(1)
    murderer_entity_id: int = betterproto.uint32_field(2)
    monster_id: int = betterproto.uint32_field(3, group="entity")
    gadget_id: int = betterproto.uint32_field(4, group="entity")


@dataclass(eq=False, repr=False)
class WorldPlayerReviveReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class WorldPlayerReviveRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class JoinPlayerFailNotify(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class SetSceneWeatherAreaReq(betterproto.Message):
    weather_gadget_id: int = betterproto.uint32_field(1)
    weather_value_map: Dict[int, str] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_STRING
    )


@dataclass(eq=False, repr=False)
class SetSceneWeatherAreaRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class ExecuteGadgetLuaReq(betterproto.Message):
    source_entity_id: int = betterproto.uint32_field(1)
    param1: int = betterproto.int32_field(2)
    param2: int = betterproto.int32_field(3)
    param3: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class ExecuteGadgetLuaRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class CutSceneBeginNotify(betterproto.Message):
    cutscene_id: int = betterproto.uint32_field(1)
    is_wait_others: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class CutSceneFinishNotify(betterproto.Message):
    cutscene_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CutSceneEndNotify(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    cutscene_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ClientScriptEventNotify(betterproto.Message):
    event_type: int = betterproto.uint32_field(1)
    source_entity_id: int = betterproto.uint32_field(2)
    target_entity_id: int = betterproto.uint32_field(3)
    param_list: List[int] = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class EntityMoveInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    motion_info: "MotionInfo" = betterproto.message_field(2)
    scene_time: int = betterproto.uint32_field(3)
    reliable_seq: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SceneEntitiesMovesReq(betterproto.Message):
    entity_move_info_list: List["EntityMoveInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class EntityMoveFailInfo(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    entity_id: int = betterproto.uint32_field(2)
    fail_motion: "MotionInfo" = betterproto.message_field(3)
    scene_time: int = betterproto.uint32_field(4)
    reliable_seq: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SceneEntitiesMovesRsp(betterproto.Message):
    entity_move_fail_info_list: List["EntityMoveFailInfo"] = betterproto.message_field(
        1
    )


@dataclass(eq=False, repr=False)
class SceneEntitiesMoveCombineNotify(betterproto.Message):
    entity_move_info_list: List["EntityMoveInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class UnlockTransPointReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    point_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class UnlockTransPointRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class PlatformRouteStateNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    scene_time: int = betterproto.uint32_field(2)
    pos: "Vector" = betterproto.message_field(3)
    rot: "Vector" = betterproto.message_field(4)
    route_id: int = betterproto.uint32_field(5)
    is_started: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class SceneWeatherForcastReq(betterproto.Message):
    weather_area_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SceneWeatherForcastRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    next_climate_time: int = betterproto.uint64_field(2)
    forcast_climate_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MarkMapReq(betterproto.Message):
    op: "MarkMapReqOperation" = betterproto.enum_field(1)
    old: "MapMarkPoint" = betterproto.message_field(2)
    mark: "MapMarkPoint" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class MarkMapRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    mark_list: List["MapMarkPoint"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AllMarkPointNotify(betterproto.Message):
    mark_list: List["MapMarkPoint"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class WorldDataNotify(betterproto.Message):
    world_prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class EntityMoveRoomNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    dest_room_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class WorldPlayerInfoNotify(betterproto.Message):
    player_info_list: List["OnlinePlayerInfo"] = betterproto.message_field(1)
    player_uid_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PostEnterSceneReq(betterproto.Message):
    enter_scene_token: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PostEnterSceneRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class ChatInfo(betterproto.Message):
    time: int = betterproto.uint32_field(1)
    uid: int = betterproto.uint32_field(2)
    text: str = betterproto.string_field(3, group="content")
    icon: int = betterproto.uint32_field(4, group="content")
    system_hint: "ChatInfoSystemHint" = betterproto.message_field(5, group="content")


@dataclass(eq=False, repr=False)
class ChatInfoSystemHint(betterproto.Message):
    type: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PlayerChatReq(betterproto.Message):
    channel_id: int = betterproto.uint32_field(1)
    chat_info: "ChatInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PlayerChatRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class PlayerChatNotify(betterproto.Message):
    channel_id: int = betterproto.uint32_field(1)
    chat_info: "ChatInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PlayerChatCdNotify(betterproto.Message):
    over_time: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChatHistoryNotify(betterproto.Message):
    channel_id: int = betterproto.uint32_field(1)
    chat_info: List["ChatInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SceneDataNotify(betterproto.Message):
    level_config_name_list: List[str] = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class DungeonEntryToBeExploreNotify(betterproto.Message):
    dungeon_entry_scene_point_id: int = betterproto.uint32_field(1)
    dungeon_entry_config_id: int = betterproto.uint32_field(2)
    scene_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetDungeonEntryExploreConditionReq(betterproto.Message):
    dungeon_entry_scene_point_id: int = betterproto.uint32_field(1)
    dungeon_entry_config_id: int = betterproto.uint32_field(2)
    scene_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DungeonEntryCond(betterproto.Message):
    cond_reason: "DungeonEntryBlockReason" = betterproto.enum_field(1)
    param1: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetDungeonEntryExploreConditionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    dungeon_entry_cond: "DungeonEntryCond" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class UnfreezeGroupLimitNotify(betterproto.Message):
    point_id: int = betterproto.uint32_field(1)
    scene_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ShopGoods(betterproto.Message):
    goods_id: int = betterproto.uint32_field(1)
    goods_item: "ItemParam" = betterproto.message_field(2)
    scoin: int = betterproto.uint32_field(3)
    hcoin: int = betterproto.uint32_field(4)
    cost_item_list: List["ItemParam"] = betterproto.message_field(5)
    bought_num: int = betterproto.uint32_field(6)
    buy_limit: int = betterproto.uint32_field(7)
    begin_time: int = betterproto.uint32_field(8)
    end_time: int = betterproto.uint32_field(9)
    next_refresh_time: int = betterproto.uint32_field(10)
    min_level: int = betterproto.uint32_field(11)
    max_level: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class Shop(betterproto.Message):
    shop_type: int = betterproto.uint32_field(1)
    goods_list: List["ShopGoods"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetShopReq(betterproto.Message):
    shop_type: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetShopRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    shop: "Shop" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class BuyGoodsReq(betterproto.Message):
    shop_type: int = betterproto.uint32_field(1)
    goods: "ShopGoods" = betterproto.message_field(2)
    buy_count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BuyGoodsRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    shop_type: int = betterproto.uint32_field(2)
    goods: "ShopGoods" = betterproto.message_field(3)
    buy_count: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class UnlockAvatarTalentReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    talent_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class UnlockAvatarTalentRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    avatar_guid: int = betterproto.uint64_field(2)
    talent_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AvatarUnlockTalentNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    entity_id: int = betterproto.uint32_field(2)
    talent_id: int = betterproto.uint32_field(3)
    skill_depot_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class AvatarSkillDepotChangeNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    entity_id: int = betterproto.uint32_field(2)
    skill_depot_id: int = betterproto.uint32_field(3)
    talent_id_list: List[int] = betterproto.uint32_field(4)
    proud_skill_list: List[int] = betterproto.uint32_field(5)
    core_proud_skill_level: int = betterproto.uint32_field(6)
    skill_level_map: Dict[int, int] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    proud_skill_extra_level_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class BigTalentPointConvertReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    item_guid_list: List[int] = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class BigTalentPointConvertRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    avatar_guid: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class AvatarSkillMaxChargeCountNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    skill_id: int = betterproto.uint32_field(2)
    max_charge_count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AvatarSkillInfoNotify(betterproto.Message):
    guid: int = betterproto.uint64_field(1)
    skill_map: Dict[int, "AvatarSkillInfo"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class ProudSkillUpgradeReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    proud_skill_id: int = betterproto.uint32_field(2)
    old_proud_skill_level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ProudSkillUpgradeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    avatar_guid: int = betterproto.uint64_field(2)
    proud_skill_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ProudSkillChangeNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    entity_id: int = betterproto.uint32_field(2)
    skill_depot_id: int = betterproto.uint32_field(3)
    proud_skill_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class AvatarSkillUpgradeReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    avatar_skill_id: int = betterproto.uint32_field(2)
    old_level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AvatarSkillUpgradeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    avatar_guid: int = betterproto.uint64_field(2)
    avatar_skill_id: int = betterproto.uint32_field(3)
    old_level: int = betterproto.uint32_field(4)
    cur_level: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class AvatarSkillChangeNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    entity_id: int = betterproto.uint32_field(2)
    skill_depot_id: int = betterproto.uint32_field(3)
    avatar_skill_id: int = betterproto.uint32_field(4)
    old_level: int = betterproto.uint32_field(5)
    cur_level: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ProudSkillExtraLevelNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    talent_type: int = betterproto.uint32_field(2)
    talent_index: int = betterproto.uint32_field(3)
    extra_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class CanUseSkillNotify(betterproto.Message):
    is_can_use_skill: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class FriendItem(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    gender: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class GetPlayerFriendListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetPlayerFriendListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    friend_list: List["FriendItem"] = betterproto.message_field(2)
    ask_friend_list: List["FriendItem"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class AskAddFriendReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AskAddFriendRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AddFriendReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AddFriendRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class TowerTeam(betterproto.Message):
    tower_team_id: int = betterproto.uint32_field(1)
    avatar_guid_list: List[int] = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class TowerLevelRecord(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)
    satisfied_cond_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TowerFloorRecord(betterproto.Message):
    floor_id: int = betterproto.uint32_field(1)
    passed_level_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    floor_star_reward_progress: int = betterproto.uint32_field(3)
    passed_level_record_list: List["TowerLevelRecord"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class TowerCurLevelRecord(betterproto.Message):
    cur_floor_id: int = betterproto.uint32_field(1)
    cur_level_index: int = betterproto.uint32_field(2)
    tower_team_list: List["TowerTeam"] = betterproto.message_field(3)
    buff_id_list: List[int] = betterproto.uint32_field(4)
    is_empty: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class TowerBriefDataNotify(betterproto.Message):
    tower_schedule_id: int = betterproto.uint32_field(1)
    next_schedule_change_time: int = betterproto.uint32_field(2)
    total_star_num: int = betterproto.uint32_field(3)
    last_floor_index: int = betterproto.uint32_field(4)
    last_level_index: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TowerFloorRecordChangeNotify(betterproto.Message):
    tower_floor_record_list: List["TowerFloorRecord"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class TowerCurLevelRecordChangeNotify(betterproto.Message):
    cur_level_record: "TowerCurLevelRecord" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class TowerDailyRewardProgressChangeNotify(betterproto.Message):
    daily_floor_id: int = betterproto.uint32_field(1)
    daily_level_index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TowerTeamSelectReq(betterproto.Message):
    floor_id: int = betterproto.uint32_field(1)
    tower_team_list: List["TowerTeam"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TowerTeamSelectRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class TowerAllDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TowerAllDataRsp(betterproto.Message):
    tower_schedule_id: int = betterproto.uint32_field(1)
    tower_floor_record_list: List["TowerFloorRecord"] = betterproto.message_field(2)
    daily_floor_id: int = betterproto.uint32_field(3)
    daily_level_index: int = betterproto.uint32_field(4)
    cur_level_record: "TowerCurLevelRecord" = betterproto.message_field(5)
    next_schedule_change_time: int = betterproto.uint32_field(6)
    floor_open_time_map: Dict[int, int] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class TowerEnterLevelReq(betterproto.Message):
    enter_point_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TowerEnterLevelRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    floor_id: int = betterproto.uint32_field(2)
    level_index: int = betterproto.uint32_field(3)
    tower_buff_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TowerBuffSelectReq(betterproto.Message):
    tower_buff_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TowerBuffSelectRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    tower_buff_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TowerSurrenderReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TowerSurrenderRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class TowerGetFloorStarRewardReq(betterproto.Message):
    floor_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TowerGetFloorStarRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    floor_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TowerLevelEndNotify(betterproto.Message):
    is_success: bool = betterproto.bool_field(1)
    finished_star_cond_list: List[int] = betterproto.uint32_field(2)
    reward_item_list: List["ItemParam"] = betterproto.message_field(3)
    continue_state: int = betterproto.uint32_field(4)
    next_floor_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TowerLevelStarCondData(betterproto.Message):
    star_cond_index: int = betterproto.uint32_field(3)
    cond_value: int = betterproto.uint32_field(4)
    is_pause: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class TowerLevelStarCondNotify(betterproto.Message):
    floor_id: int = betterproto.uint32_field(1)
    level_index: int = betterproto.uint32_field(2)
    cond_data_list: List["TowerLevelStarCondData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TowerMiddleLevelChangeTeamNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class WatcherAllDataNotify(betterproto.Message):
    watcher_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class WatcherChangeNotify(betterproto.Message):
    new_watcher_list: List[int] = betterproto.uint32_field(1)
    removed_watcher_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class WatcherEventNotify(betterproto.Message):
    watcher_id: int = betterproto.uint32_field(1)
    add_progress: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class WatcherEventTypeNotify(betterproto.Message):
    watcher_trigger_type: int = betterproto.uint32_field(1)
    param_list: List[int] = betterproto.uint32_field(2)
    add_progress: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PushTipsData(betterproto.Message):
    push_tips_id: int = betterproto.uint32_field(1)
    state: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PushTipsAllDataNotify(betterproto.Message):
    push_tips_list: List["PushTipsData"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PushTipsChangeNotify(betterproto.Message):
    push_tips_list: List["PushTipsData"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PushTipsReadFinishReq(betterproto.Message):
    push_tips_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PushTipsReadFinishRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    push_tips_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetPushTipsRewardReq(betterproto.Message):
    push_tips_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetPushTipsRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    push_tips_id_list: List[int] = betterproto.uint32_field(2)
